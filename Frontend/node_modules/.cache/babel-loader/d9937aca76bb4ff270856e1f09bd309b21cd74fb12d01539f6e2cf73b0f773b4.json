{"ast":null,"code":"var _jsxFileName = \"C:\\\\UMI\\\\Frontend\\\\src\\\\components\\\\AttendanceManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { instructorAttendanceService } from '../api/instructorAttendanceService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceManagement = () => {\n  _s();\n  var _departments$find, _semesters$find;\n  const [departments, setDepartments] = useState([]);\n  const [semesters, setSemesters] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [selectedSemester, setSelectedSemester] = useState(null);\n  const [attendanceDate, setAttendanceDate] = useState(new Date().toISOString().split('T')[0]);\n  const [attendanceStatuses, setAttendanceStatuses] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  useEffect(() => {\n    if (selectedDepartment) {\n      const deptId = parseInt(selectedDepartment);\n      if (!isNaN(deptId)) {\n        fetchSemesters(deptId);\n      }\n      setSelectedSemester(null);\n      setStudents([]);\n      setAttendanceStatuses({});\n    }\n  }, [selectedDepartment]);\n  useEffect(() => {\n    if (selectedDepartment && selectedSemester) {\n      const deptId = parseInt(selectedDepartment);\n      if (!isNaN(deptId)) {\n        fetchStudents(deptId, selectedSemester);\n      }\n    }\n  }, [selectedDepartment, selectedSemester]);\n  const fetchDepartments = async () => {\n    try {\n      setLoading(true);\n      const response = await instructorAttendanceService.getDepartments();\n      console.log('Fetched departments:', response); // Debug log\n      setDepartments(response);\n    } catch (err) {\n      console.error('Error fetching departments:', err); // Debug log\n      setError('Failed to fetch departments');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchSemesters = async departmentId => {\n    try {\n      setLoading(true);\n      const response = await instructorAttendanceService.getSemestersByDepartment(departmentId);\n      setSemesters(response);\n    } catch (err) {\n      setError('Failed to fetch semesters');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchStudents = async (departmentId, semesterId) => {\n    try {\n      setLoading(true);\n      const response = await instructorAttendanceService.getStudentsByDepartmentAndSemester(departmentId, semesterId);\n      setStudents(response);\n\n      // Initialize attendance statuses to 'Present' for all students\n      const initialStatuses = {};\n      response.forEach(student => {\n        initialStatuses[student.student_id] = 'Present';\n      });\n      setAttendanceStatuses(initialStatuses);\n    } catch (err) {\n      setError('Failed to fetch students');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAttendanceStatusChange = (studentId, status) => {\n    setAttendanceStatuses(prev => ({\n      ...prev,\n      [studentId]: status\n    }));\n  };\n  const handleSubmitAttendance = async () => {\n    if (!selectedDepartment || !selectedSemester || students.length === 0) {\n      setError('Please select department, semester, and ensure students are loaded');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      const attendances = students.map(student => ({\n        student_id: student.student_id,\n        status: attendanceStatuses[student.student_id] || 'Present'\n      }));\n      const requestData = {\n        date: attendanceDate,\n        attendances: attendances\n      };\n      const response = await instructorAttendanceService.markBulkAttendance(requestData);\n      setSuccess(response.message);\n\n      // Reset attendance statuses to Present after successful submission\n      const resetStatuses = {};\n      students.forEach(student => {\n        resetStatuses[student.student_id] = 'Present';\n      });\n      setAttendanceStatuses(resetStatuses);\n    } catch (err) {\n      setError('Failed to mark attendance');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const markAllPresent = () => {\n    const newStatuses = {};\n    students.forEach(student => {\n      newStatuses[student.student_id] = 'Present';\n    });\n    setAttendanceStatuses(newStatuses);\n  };\n  const markAllAbsent = () => {\n    const newStatuses = {};\n    students.forEach(student => {\n      newStatuses[student.student_id] = 'Absent';\n    });\n    setAttendanceStatuses(newStatuses);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Bulk Attendance Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedDepartment || '',\n            onChange: e => setSelectedDepartment(e.target.value || null),\n            className: \"w-full p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), departments.filter(dept => dept.id != null && typeof dept.id === 'number').map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dept.id.toString(),\n              children: [dept.name, \" (\", dept.code, \")\"]\n            }, dept.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSemester || '',\n            onChange: e => setSelectedSemester(e.target.value ? parseInt(e.target.value) : null),\n            className: \"w-full p-2 border rounded\",\n            disabled: !selectedDepartment,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), semesters.filter(sem => sem.id != null && typeof sem.id === 'number').map(sem => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: sem.id,\n              children: sem.name\n            }, sem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: attendanceDate,\n            max: new Date().toISOString().split('T')[0] // Prevent future dates\n            ,\n            onChange: e => {\n              if (e.target.value <= new Date().toISOString().split('T')[0]) {\n                setAttendanceDate(e.target.value);\n              }\n            },\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), students.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Students (\", students.length, \") - \", (_departments$find = departments.find(d => {\n            const deptId = selectedDepartment ? parseInt(selectedDepartment) : -1;\n            return !isNaN(deptId) && d.id === deptId;\n          })) === null || _departments$find === void 0 ? void 0 : _departments$find.name, \" - \", (_semesters$find = semesters.find(s => s.id === selectedSemester)) === null || _semesters$find === void 0 ? void 0 : _semesters$find.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: markAllPresent,\n            className: \"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\",\n            children: \"Mark All Present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: markAllAbsent,\n            className: \"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\",\n            children: \"Mark All Absent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitAttendance,\n            disabled: loading,\n            className: \"bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700 disabled:opacity-50\",\n            children: loading ? 'Saving...' : 'Submit Attendance'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2 max-h-96 overflow-y-auto\",\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-3 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"ID: \", student.student_id, \" | Email: \", student.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: ['Present', 'Absent', 'Late'].map(status => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `attendance-${student.student_id}`,\n                value: status,\n                checked: attendanceStatuses[student.student_id] === status,\n                onChange: () => handleAttendanceStatusChange(student.student_id, status),\n                className: \"mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-sm ${status === 'Present' ? 'text-green-600' : status === 'Absent' ? 'text-red-600' : 'text-yellow-600'}`,\n                children: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this)]\n            }, status, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, student.student_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), selectedDepartment && selectedSemester && students.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 text-center py-8\",\n        children: \"No students found for the selected department and semester.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), !selectedDepartment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 text-center py-8\",\n        children: \"Please select a department and semester to view students and mark attendance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceManagement, \"u/PJ+V105aa1VQXmiu9Px0MJx6w=\");\n_c = AttendanceManagement;\nexport default AttendanceManagement;\nvar _c;\n$RefreshReg$(_c, \"AttendanceManagement\");","map":{"version":3,"names":["React","useState","useEffect","instructorAttendanceService","jsxDEV","_jsxDEV","AttendanceManagement","_s","_departments$find","_semesters$find","departments","setDepartments","semesters","setSemesters","students","setStudents","selectedDepartment","setSelectedDepartment","selectedSemester","setSelectedSemester","attendanceDate","setAttendanceDate","Date","toISOString","split","attendanceStatuses","setAttendanceStatuses","loading","setLoading","error","setError","success","setSuccess","fetchDepartments","deptId","parseInt","isNaN","fetchSemesters","fetchStudents","response","getDepartments","console","log","err","departmentId","getSemestersByDepartment","semesterId","getStudentsByDepartmentAndSemester","initialStatuses","forEach","student","student_id","handleAttendanceStatusChange","studentId","status","prev","handleSubmitAttendance","length","attendances","map","requestData","date","markBulkAttendance","message","resetStatuses","markAllPresent","newStatuses","markAllAbsent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","filter","dept","id","toString","name","code","disabled","sem","type","max","find","d","s","onClick","email","checked","_c","$RefreshReg$"],"sources":["C:/UMI/Frontend/src/components/AttendanceManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { instructorAttendanceService, Department, Semester, Student, BulkAttendanceRequest } from '../api/instructorAttendanceService';\r\n\r\nconst AttendanceManagement: React.FC = () => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [semesters, setSemesters] = useState<Semester[]>([]);\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<string | null>(null);\r\n  const [selectedSemester, setSelectedSemester] = useState<number | null>(null);\r\n  const [attendanceDate, setAttendanceDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [attendanceStatuses, setAttendanceStatuses] = useState<{ [key: string]: 'Present' | 'Absent' | 'Late' }>({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDepartment) {\r\n      const deptId = parseInt(selectedDepartment);\r\n      if (!isNaN(deptId)) {\r\n        fetchSemesters(deptId);\r\n      }\r\n      setSelectedSemester(null);\r\n      setStudents([]);\r\n      setAttendanceStatuses({});\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDepartment && selectedSemester) {\r\n      const deptId = parseInt(selectedDepartment);\r\n      if (!isNaN(deptId)) {\r\n        fetchStudents(deptId, selectedSemester);\r\n      }\r\n    }\r\n  }, [selectedDepartment, selectedSemester]);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await instructorAttendanceService.getDepartments();\r\n      console.log('Fetched departments:', response);  // Debug log\r\n      setDepartments(response);\r\n    } catch (err: any) {\r\n      console.error('Error fetching departments:', err);  // Debug log\r\n      setError('Failed to fetch departments');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSemesters = async (departmentId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await instructorAttendanceService.getSemestersByDepartment(departmentId);\r\n      setSemesters(response);\r\n    } catch (err: any) {\r\n      setError('Failed to fetch semesters');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async (departmentId: number, semesterId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await instructorAttendanceService.getStudentsByDepartmentAndSemester(departmentId, semesterId);\r\n      setStudents(response);\r\n\r\n      // Initialize attendance statuses to 'Present' for all students\r\n      const initialStatuses: { [key: string]: 'Present' | 'Absent' | 'Late' } = {};\r\n      response.forEach(student => {\r\n        initialStatuses[student.student_id] = 'Present';\r\n      });\r\n      setAttendanceStatuses(initialStatuses);\r\n    } catch (err: any) {\r\n      setError('Failed to fetch students');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAttendanceStatusChange = (studentId: string, status: 'Present' | 'Absent' | 'Late') => {\r\n    setAttendanceStatuses(prev => ({\r\n      ...prev,\r\n      [studentId]: status\r\n    }));\r\n  };\r\n\r\n  const handleSubmitAttendance = async () => {\r\n    if (!selectedDepartment || !selectedSemester || students.length === 0) {\r\n      setError('Please select department, semester, and ensure students are loaded');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setSuccess(null);\r\n\r\n      const attendances = students.map(student => ({\r\n        student_id: student.student_id,\r\n        status: attendanceStatuses[student.student_id] || 'Present'\r\n      }));\r\n\r\n      const requestData: BulkAttendanceRequest = {\r\n        date: attendanceDate,\r\n        attendances: attendances\r\n      };\r\n\r\n      const response = await instructorAttendanceService.markBulkAttendance(requestData);\r\n      setSuccess(response.message);\r\n\r\n      // Reset attendance statuses to Present after successful submission\r\n      const resetStatuses: { [key: string]: 'Present' | 'Absent' | 'Late' } = {};\r\n      students.forEach(student => {\r\n        resetStatuses[student.student_id] = 'Present';\r\n      });\r\n      setAttendanceStatuses(resetStatuses);\r\n\r\n    } catch (err: any) {\r\n      setError('Failed to mark attendance');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const markAllPresent = () => {\r\n    const newStatuses: { [key: string]: 'Present' | 'Absent' | 'Late' } = {};\r\n    students.forEach(student => {\r\n      newStatuses[student.student_id] = 'Present';\r\n    });\r\n    setAttendanceStatuses(newStatuses);\r\n  };\r\n\r\n  const markAllAbsent = () => {\r\n    const newStatuses: { [key: string]: 'Present' | 'Absent' | 'Late' } = {};\r\n    students.forEach(student => {\r\n      newStatuses[student.student_id] = 'Absent';\r\n    });\r\n    setAttendanceStatuses(newStatuses);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Bulk Attendance Management</h2>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {success && (\r\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\r\n          {success}\r\n        </div>\r\n      )}\r\n\r\n      {/* Selection Controls */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">Department</label>\r\n            <select\r\n              value={selectedDepartment || ''}\r\n              onChange={(e) => setSelectedDepartment(e.target.value || null)}\r\n              className=\"w-full p-2 border rounded\"\r\n            >\r\n              <option value=\"\">Select Department</option>\r\n              {departments\r\n                .filter((dept): dept is Department => dept.id != null && typeof dept.id === 'number')\r\n                .map((dept) => (\r\n                  <option key={dept.id} value={dept.id.toString()}>\r\n                    {dept.name} ({dept.code})\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">Semester</label>\r\n            <select\r\n              value={selectedSemester || ''}\r\n              onChange={(e) => setSelectedSemester(e.target.value ? parseInt(e.target.value) : null)}\r\n              className=\"w-full p-2 border rounded\"\r\n              disabled={!selectedDepartment}\r\n            >\r\n              <option value=\"\">Select Semester</option>\r\n              {semesters\r\n                .filter((sem): sem is Semester => sem.id != null && typeof sem.id === 'number')\r\n                .map((sem) => (\r\n                  <option key={sem.id} value={sem.id}>\r\n                    {sem.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={attendanceDate}\r\n              max={new Date().toISOString().split('T')[0]}  // Prevent future dates\r\n              onChange={(e) => {\r\n                if (e.target.value <= new Date().toISOString().split('T')[0]) {\r\n                  setAttendanceDate(e.target.value);\r\n                }\r\n              }}\r\n              className=\"w-full p-2 border rounded\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Students List and Attendance */}\r\n      {students.length > 0 && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg font-semibold\">\r\n                Students ({students.length}) - {departments.find(d => {\r\n                  const deptId = selectedDepartment ? parseInt(selectedDepartment) : -1;\r\n                  return !isNaN(deptId) && d.id === deptId;\r\n                })?.name} - {semesters.find(s => s.id === selectedSemester)?.name}\r\n              </h3>\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={markAllPresent}\r\n                className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n              >\r\n                Mark All Present\r\n              </button>\r\n              <button\r\n                onClick={markAllAbsent}\r\n                className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700\"\r\n              >\r\n                Mark All Absent\r\n              </button>\r\n              <button\r\n                onClick={handleSubmitAttendance}\r\n                disabled={loading}\r\n                className=\"bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {loading ? 'Saving...' : 'Submit Attendance'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n            {students.map((student) => (\r\n              <div key={student.student_id} className=\"flex items-center justify-between p-3 border rounded\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"font-medium\">{student.name}</div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    ID: {student.student_id} | Email: {student.email}\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex space-x-2\">\r\n                  {(['Present', 'Absent', 'Late'] as const).map((status) => (\r\n                    <label key={status} className=\"flex items-center\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`attendance-${student.student_id}`}\r\n                        value={status}\r\n                        checked={attendanceStatuses[student.student_id] === status}\r\n                        onChange={() => handleAttendanceStatusChange(student.student_id, status)}\r\n                        className=\"mr-1\"\r\n                      />\r\n                      <span className={`text-sm ${\r\n                        status === 'Present' ? 'text-green-600' :\r\n                        status === 'Absent' ? 'text-red-600' : 'text-yellow-600'\r\n                      }`}>\r\n                        {status}\r\n                      </span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {selectedDepartment && selectedSemester && students.length === 0 && !loading && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <div className=\"text-gray-500 text-center py-8\">\r\n            No students found for the selected department and semester.\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!selectedDepartment && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <div className=\"text-gray-500 text-center py-8\">\r\n            Please select a department and semester to view students and mark attendance.\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}