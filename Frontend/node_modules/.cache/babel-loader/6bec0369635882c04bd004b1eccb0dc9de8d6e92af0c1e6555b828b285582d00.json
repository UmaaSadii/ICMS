{"ast":null,"code":"import{academicsService}from'../api/academicsService_enhanced';export class ResultModel{constructor(){this.results=[];this.assignedCourses=[];}async fetchResults(studentId){const response=await academicsService.getStudentResults(studentId);this.results=response.data.results||[];this.assignedCourses=response.data.assigned_courses||[];return{results:this.results,assigned_courses:this.assignedCourses};}async createResult(studentId,data){await academicsService.createStudentResult(studentId,data);// Refetch results after creation\nawait this.fetchResults(studentId);}async deleteResult(resultId){await academicsService.deleteResult(resultId);}getResults(){return this.results;}getAssignedCourses(){return this.assignedCourses;}calculateGrade(obtained,total){const percentage=obtained/total*100;if(percentage>=90)return'A+';if(percentage>=85)return'A';if(percentage>=80)return'A-';if(percentage>=75)return'B+';if(percentage>=70)return'B';if(percentage>=65)return'B-';if(percentage>=60)return'C+';if(percentage>=55)return'C';if(percentage>=50)return'C-';if(percentage>=45)return'D+';if(percentage>=40)return'D';return'F';}}","map":{"version":3,"names":["academicsService","ResultModel","constructor","results","assignedCourses","fetchResults","studentId","response","getStudentResults","data","assigned_courses","createResult","createStudentResult","deleteResult","resultId","getResults","getAssignedCourses","calculateGrade","obtained","total","percentage"],"sources":["c:/UMI/Frontend/src/models/ResultModel.ts"],"sourcesContent":["import { academicsService } from '../api/academicsService_enhanced';\r\n\r\nexport interface Result {\r\n  result_id: number;\r\n  subject: string;\r\n  exam_type: string;\r\n  exam_date: string;\r\n  total_marks: number;\r\n  obtained_marks: number;\r\n  grade: string;\r\n}\r\n\r\nexport class ResultModel {\r\n  private results: Result[] = [];\r\n  private assignedCourses: { course_id: number; name: string }[] = [];\r\n\r\n  async fetchResults(studentId: string): Promise<{ results: Result[]; assigned_courses: { course_id: number; name: string }[] }> {\r\n    const response = await academicsService.getStudentResults(studentId);\r\n    this.results = response.data.results || [];\r\n    this.assignedCourses = response.data.assigned_courses || [];\r\n    return { results: this.results, assigned_courses: this.assignedCourses };\r\n  }\r\n\r\n  async createResult(studentId: string, data: any): Promise<void> {\r\n    await academicsService.createStudentResult(studentId, data);\r\n    // Refetch results after creation\r\n    await this.fetchResults(studentId);\r\n  }\r\n\r\n  async deleteResult(resultId: number): Promise<void> {\r\n    await academicsService.deleteResult(resultId);\r\n  }\r\n\r\n  getResults(): Result[] {\r\n    return this.results;\r\n  }\r\n\r\n  getAssignedCourses(): { course_id: number; name: string }[] {\r\n    return this.assignedCourses;\r\n  }\r\n\r\n  calculateGrade(obtained: number, total: number): string {\r\n    const percentage = (obtained / total) * 100;\r\n    if (percentage >= 90) return 'A+';\r\n    if (percentage >= 85) return 'A';\r\n    if (percentage >= 80) return 'A-';\r\n    if (percentage >= 75) return 'B+';\r\n    if (percentage >= 70) return 'B';\r\n    if (percentage >= 65) return 'B-';\r\n    if (percentage >= 60) return 'C+';\r\n    if (percentage >= 55) return 'C';\r\n    if (percentage >= 50) return 'C-';\r\n    if (percentage >= 45) return 'D+';\r\n    if (percentage >= 40) return 'D';\r\n    return 'F';\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,kCAAkC,CAYnE,MAAO,MAAM,CAAAC,WAAY,CAAAC,YAAA,OACfC,OAAO,CAAa,EAAE,MACtBC,eAAe,CAA0C,EAAE,EAEnE,KAAM,CAAAC,YAAYA,CAACC,SAAiB,CAA2F,CAC7H,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,gBAAgB,CAACQ,iBAAiB,CAACF,SAAS,CAAC,CACpE,IAAI,CAACH,OAAO,CAAGI,QAAQ,CAACE,IAAI,CAACN,OAAO,EAAI,EAAE,CAC1C,IAAI,CAACC,eAAe,CAAGG,QAAQ,CAACE,IAAI,CAACC,gBAAgB,EAAI,EAAE,CAC3D,MAAO,CAAEP,OAAO,CAAE,IAAI,CAACA,OAAO,CAAEO,gBAAgB,CAAE,IAAI,CAACN,eAAgB,CAAC,CAC1E,CAEA,KAAM,CAAAO,YAAYA,CAACL,SAAiB,CAAEG,IAAS,CAAiB,CAC9D,KAAM,CAAAT,gBAAgB,CAACY,mBAAmB,CAACN,SAAS,CAAEG,IAAI,CAAC,CAC3D;AACA,KAAM,KAAI,CAACJ,YAAY,CAACC,SAAS,CAAC,CACpC,CAEA,KAAM,CAAAO,YAAYA,CAACC,QAAgB,CAAiB,CAClD,KAAM,CAAAd,gBAAgB,CAACa,YAAY,CAACC,QAAQ,CAAC,CAC/C,CAEAC,UAAUA,CAAA,CAAa,CACrB,MAAO,KAAI,CAACZ,OAAO,CACrB,CAEAa,kBAAkBA,CAAA,CAA0C,CAC1D,MAAO,KAAI,CAACZ,eAAe,CAC7B,CAEAa,cAAcA,CAACC,QAAgB,CAAEC,KAAa,CAAU,CACtD,KAAM,CAAAC,UAAU,CAAIF,QAAQ,CAAGC,KAAK,CAAI,GAAG,CAC3C,GAAIC,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,GAAG,CAChC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,GAAG,CAChC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,GAAG,CAChC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,IAAI,CACjC,GAAIA,UAAU,EAAI,EAAE,CAAE,MAAO,GAAG,CAChC,MAAO,GAAG,CACZ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}