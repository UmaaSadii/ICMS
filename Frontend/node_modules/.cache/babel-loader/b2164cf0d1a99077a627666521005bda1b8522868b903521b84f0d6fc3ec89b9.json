{"ast":null,"code":"var _jsxFileName = \"C:\\\\UMI\\\\Frontend\\\\src\\\\components\\\\pages\\\\ResultManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { academicsService } from '../../api/academicsService_enhanced';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultManagement = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedGrade, setSelectedGrade] = useState('');\n  const [selectedExamType, setSelectedExamType] = useState('');\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedResults, setSelectedResults] = useState([]);\n\n  // Helper function to safely get department name\n  const getDepartmentName = departmentData => {\n    if (!departmentData) return 'N/A';\n\n    // If it's an object with a name property, extract the name\n    if (typeof departmentData === 'object' && departmentData !== null && 'name' in departmentData) {\n      return departmentData.name || 'N/A';\n    }\n\n    // If it's a string, return as is\n    if (typeof departmentData === 'string') {\n      return departmentData || 'N/A';\n    }\n\n    // Fallback - if it's an object but doesn't have name, return N/A\n    if (typeof departmentData === 'object' && departmentData !== null) {\n      return 'N/A';\n    }\n\n    // Fallback\n    return 'N/A';\n  };\n\n  // Helper function to safely get course name\n  const getCourseName = courseData => {\n    if (!courseData) return 'N/A';\n\n    // If it's an object with a name property, extract the name\n    if (typeof courseData === 'object' && courseData !== null && 'name' in courseData) {\n      return courseData.name || 'N/A';\n    }\n\n    // If it's an object with course_name property, extract the course_name\n    if (typeof courseData === 'object' && courseData !== null && 'course_name' in courseData) {\n      return courseData.course_name || 'N/A';\n    }\n\n    // If it's a string, return as is\n    if (typeof courseData === 'string') {\n      return courseData || 'N/A';\n    }\n\n    // Fallback - if it's an object but doesn't have name or course_name, return N/A\n    if (typeof courseData === 'object' && courseData !== null) {\n      return 'N/A';\n    }\n\n    // Fallback\n    return 'N/A';\n  };\n  useEffect(() => {\n    // Fetch departments\n    const fetchDepartments = async () => {\n      try {\n        const response = await academicsService.getDepartments();\n        setDepartments(response.data);\n      } catch (error) {\n        console.error('Failed to fetch departments:', error);\n      }\n    };\n    fetchDepartments();\n  }, []);\n  useEffect(() => {\n    // Fetch courses when department changes\n    const fetchCourses = async () => {\n      if (selectedDepartment) {\n        try {\n          const response = await academicsService.getCoursesByDepartment(selectedDepartment);\n          setCourses(response.data);\n        } catch (error) {\n          console.error('Failed to fetch courses:', error);\n        }\n      } else {\n        setCourses([]);\n      }\n    };\n    fetchCourses();\n  }, [selectedDepartment]);\n  useEffect(() => {\n    // Fetch results when department or course changes\n    const fetchResults = async () => {\n      if (selectedDepartment && selectedCourse) {\n        setLoading(true);\n        try {\n          const response = await academicsService.getResultsByDepartmentCourse(selectedDepartment, selectedCourse);\n          setResults(response.data);\n          setFilteredResults(response.data);\n        } catch (error) {\n          console.error('Failed to fetch results:', error);\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        setResults([]);\n        setFilteredResults([]);\n      }\n    };\n    fetchResults();\n  }, [selectedDepartment, selectedCourse]);\n\n  // Apply filters when search term or filters change\n  useEffect(() => {\n    let filtered = results;\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(result => result.student_name.toLowerCase().includes(searchTerm.toLowerCase()) || result.subject.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Grade filter\n    if (selectedGrade) {\n      filtered = filtered.filter(result => result.grade === selectedGrade);\n    }\n\n    // Exam type filter\n    if (selectedExamType) {\n      filtered = filtered.filter(result => result.exam_type === selectedExamType);\n    }\n    setFilteredResults(filtered);\n  }, [results, searchTerm, selectedGrade, selectedExamType]);\n\n  // Calculate statistics\n  const getStatistics = () => {\n    const total = filteredResults.length;\n    const gradeCounts = filteredResults.reduce((acc, result) => {\n      acc[result.grade] = (acc[result.grade] || 0) + 1;\n      return acc;\n    }, {});\n    const avgPercentage = total > 0 ? filteredResults.reduce((sum, result) => sum + result.percentage, 0) / total : 0;\n    return {\n      total,\n      gradeCounts,\n      avgPercentage\n    };\n  };\n  const statistics = getStatistics();\n\n  // Export functions\n  const exportToCSV = () => {\n    const headers = ['Student Name', 'Subject', 'Exam Type', 'Marks', 'Grade', 'Percentage', 'Exam Date', 'Semester', 'Department'];\n    const csvContent = [headers.join(','), ...filteredResults.map(result => [result.student_name, result.subject, result.exam_type, result.marks, result.grade, result.percentage.toFixed(1), result.exam_date, result.semester, getDepartmentName(result.department)].join(','))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'results.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  // Bulk operations\n  const handleSelectAll = checked => {\n    if (checked) {\n      setSelectedResults(filteredResults.map(r => r.id));\n    } else {\n      setSelectedResults([]);\n    }\n  };\n  const handleSelectResult = (id, checked) => {\n    if (checked) {\n      setSelectedResults([...selectedResults, id]);\n    } else {\n      setSelectedResults(selectedResults.filter(r => r !== id));\n    }\n  };\n  const handleBulkDelete = async () => {\n    if (!window.confirm(`Delete ${selectedResults.length} selected results?`)) return;\n    try {\n      setLoading(true);\n      await Promise.all(selectedResults.map(id => academicsService.deleteResult(id)));\n      // Refresh results\n      if (selectedDepartment && selectedCourse) {\n        const response = await academicsService.getResultsByDepartmentCourse(selectedDepartment, selectedCourse);\n        setResults(response.data);\n        setFilteredResults(response.data);\n      }\n      setSelectedResults([]);\n    } catch (error) {\n      console.error('Failed to delete results:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Result Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDepartment !== null && selectedDepartment !== void 0 ? selectedDepartment : '',\n        onChange: e => setSelectedDepartment(e.target.value ? Number(e.target.value) : null),\n        className: \"border p-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dept.id,\n          children: dept.name\n        }, dept.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCourse !== null && selectedCourse !== void 0 ? selectedCourse : '',\n        onChange: e => setSelectedCourse(e.target.value ? Number(e.target.value) : null),\n        className: \"border p-2 rounded\",\n        disabled: !selectedDepartment,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.id,\n          children: course.name\n        }, course.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full bg-white border border-gray-200 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b\",\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b\",\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b\",\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b\",\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border-b\",\n            children: \"Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 6,\n            className: \"text-center py-4\",\n            children: \"No results found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this) : results.map(result => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border-b\",\n            children: result.student_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border-b\",\n            children: result.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border-b\",\n            children: result.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border-b\",\n            children: result.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border-b\",\n            children: getDepartmentName(result.department)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border-b\",\n            children: getCourseName(result.course)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultManagement, \"ofXKQWPbrCbaGLyZdbVCCNwUw2Q=\");\n_c = ResultManagement;\nexport default ResultManagement;\nvar _c;\n$RefreshReg$(_c, \"ResultManagement\");","map":{"version":3,"names":["React","useState","useEffect","academicsService","jsxDEV","_jsxDEV","ResultManagement","_s","results","setResults","filteredResults","setFilteredResults","departments","setDepartments","courses","setCourses","selectedDepartment","setSelectedDepartment","selectedCourse","setSelectedCourse","loading","setLoading","searchTerm","setSearchTerm","selectedGrade","setSelectedGrade","selectedExamType","setSelectedExamType","showFilters","setShowFilters","selectedResults","setSelectedResults","getDepartmentName","departmentData","name","getCourseName","courseData","course_name","fetchDepartments","response","getDepartments","data","error","console","fetchCourses","getCoursesByDepartment","fetchResults","getResultsByDepartmentCourse","filtered","filter","result","student_name","toLowerCase","includes","subject","grade","exam_type","getStatistics","total","length","gradeCounts","reduce","acc","avgPercentage","sum","percentage","statistics","exportToCSV","headers","csvContent","join","map","marks","toFixed","exam_date","semester","department","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleSelectAll","checked","r","id","handleSelectResult","handleBulkDelete","confirm","Promise","all","deleteResult","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Number","dept","disabled","course","colSpan","_c","$RefreshReg$"],"sources":["C:/UMI/Frontend/src/components/pages/ResultManagement.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactElement } from 'react';\r\nimport { academicsService } from '../../api/academicsService_enhanced';\r\n\r\ninterface Result {\r\n  id: number;\r\n  result_id: number;\r\n  student_name: string;\r\n  subject: string;\r\n  grade: string;\r\n  marks: string;\r\n  percentage: number;\r\n  exam_type: string;\r\n  exam_date: string;\r\n  semester: string;\r\n  department: string;\r\n  course: any;\r\n}\r\n\r\nconst ResultManagement: React.FC = () => {\r\n  const [results, setResults] = useState<Result[]>([]);\r\n  const [filteredResults, setFilteredResults] = useState<Result[]>([]);\r\n  const [departments, setDepartments] = useState<any[]>([]);\r\n  const [courses, setCourses] = useState<any[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<number | null>(null);\r\n  const [selectedCourse, setSelectedCourse] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedGrade, setSelectedGrade] = useState('');\r\n  const [selectedExamType, setSelectedExamType] = useState('');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [selectedResults, setSelectedResults] = useState<number[]>([]);\r\n\r\n  // Helper function to safely get department name\r\n  const getDepartmentName = (departmentData: any): string => {\r\n    if (!departmentData) return 'N/A';\r\n\r\n    // If it's an object with a name property, extract the name\r\n    if (typeof departmentData === 'object' && departmentData !== null && 'name' in departmentData) {\r\n      return departmentData.name || 'N/A';\r\n    }\r\n\r\n    // If it's a string, return as is\r\n    if (typeof departmentData === 'string') {\r\n      return departmentData || 'N/A';\r\n    }\r\n\r\n    // Fallback - if it's an object but doesn't have name, return N/A\r\n    if (typeof departmentData === 'object' && departmentData !== null) {\r\n      return 'N/A';\r\n    }\r\n\r\n    // Fallback\r\n    return 'N/A';\r\n  };\r\n\r\n  // Helper function to safely get course name\r\n  const getCourseName = (courseData: any): string => {\r\n    if (!courseData) return 'N/A';\r\n\r\n    // If it's an object with a name property, extract the name\r\n    if (typeof courseData === 'object' && courseData !== null && 'name' in courseData) {\r\n      return courseData.name || 'N/A';\r\n    }\r\n\r\n    // If it's an object with course_name property, extract the course_name\r\n    if (typeof courseData === 'object' && courseData !== null && 'course_name' in courseData) {\r\n      return courseData.course_name || 'N/A';\r\n    }\r\n\r\n    // If it's a string, return as is\r\n    if (typeof courseData === 'string') {\r\n      return courseData || 'N/A';\r\n    }\r\n\r\n    // Fallback - if it's an object but doesn't have name or course_name, return N/A\r\n    if (typeof courseData === 'object' && courseData !== null) {\r\n      return 'N/A';\r\n    }\r\n\r\n    // Fallback\r\n    return 'N/A';\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch departments\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await academicsService.getDepartments();\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch departments:', error);\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch courses when department changes\r\n    const fetchCourses = async () => {\r\n      if (selectedDepartment) {\r\n        try {\r\n          const response = await academicsService.getCoursesByDepartment(selectedDepartment);\r\n          setCourses(response.data);\r\n        } catch (error) {\r\n          console.error('Failed to fetch courses:', error);\r\n        }\r\n      } else {\r\n        setCourses([]);\r\n      }\r\n    };\r\n\r\n    fetchCourses();\r\n  }, [selectedDepartment]);\r\n\r\n  useEffect(() => {\r\n    // Fetch results when department or course changes\r\n    const fetchResults = async () => {\r\n      if (selectedDepartment && selectedCourse) {\r\n        setLoading(true);\r\n        try {\r\n          const response = await academicsService.getResultsByDepartmentCourse(selectedDepartment, selectedCourse);\r\n          setResults(response.data);\r\n          setFilteredResults(response.data);\r\n        } catch (error) {\r\n          console.error('Failed to fetch results:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      } else {\r\n        setResults([]);\r\n        setFilteredResults([]);\r\n      }\r\n    };\r\n\r\n    fetchResults();\r\n  }, [selectedDepartment, selectedCourse]);\r\n\r\n  // Apply filters when search term or filters change\r\n  useEffect(() => {\r\n    let filtered = results;\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(result =>\r\n        result.student_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        result.subject.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Grade filter\r\n    if (selectedGrade) {\r\n      filtered = filtered.filter(result => result.grade === selectedGrade);\r\n    }\r\n\r\n    // Exam type filter\r\n    if (selectedExamType) {\r\n      filtered = filtered.filter(result => result.exam_type === selectedExamType);\r\n    }\r\n\r\n    setFilteredResults(filtered);\r\n  }, [results, searchTerm, selectedGrade, selectedExamType]);\r\n\r\n  // Calculate statistics\r\n  const getStatistics = () => {\r\n    const total = filteredResults.length;\r\n    const gradeCounts = filteredResults.reduce((acc, result) => {\r\n      acc[result.grade] = (acc[result.grade] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    const avgPercentage = total > 0\r\n      ? filteredResults.reduce((sum, result) => sum + result.percentage, 0) / total\r\n      : 0;\r\n\r\n    return { total, gradeCounts, avgPercentage };\r\n  };\r\n\r\n  const statistics = getStatistics();\r\n\r\n  // Export functions\r\n  const exportToCSV = () => {\r\n    const headers = ['Student Name', 'Subject', 'Exam Type', 'Marks', 'Grade', 'Percentage', 'Exam Date', 'Semester', 'Department'];\r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...filteredResults.map(result => [\r\n        result.student_name,\r\n        result.subject,\r\n        result.exam_type,\r\n        result.marks,\r\n        result.grade,\r\n        result.percentage.toFixed(1),\r\n        result.exam_date,\r\n        result.semester,\r\n        getDepartmentName(result.department)\r\n      ].join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'results.csv';\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Bulk operations\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (checked) {\r\n      setSelectedResults(filteredResults.map(r => r.id));\r\n    } else {\r\n      setSelectedResults([]);\r\n    }\r\n  };\r\n\r\n  const handleSelectResult = (id: number, checked: boolean) => {\r\n    if (checked) {\r\n      setSelectedResults([...selectedResults, id]);\r\n    } else {\r\n      setSelectedResults(selectedResults.filter(r => r !== id));\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async () => {\r\n    if (!window.confirm(`Delete ${selectedResults.length} selected results?`)) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      await Promise.all(selectedResults.map(id => academicsService.deleteResult(id)));\r\n      // Refresh results\r\n      if (selectedDepartment && selectedCourse) {\r\n        const response = await academicsService.getResultsByDepartmentCourse(selectedDepartment, selectedCourse);\r\n        setResults(response.data);\r\n        setFilteredResults(response.data);\r\n      }\r\n      setSelectedResults([]);\r\n    } catch (error) {\r\n      console.error('Failed to delete results:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"text-xl font-semibold mb-4\">Result Management</h2>\r\n\r\n      <div className=\"mb-4 flex space-x-4\">\r\n        <select\r\n          value={selectedDepartment ?? ''}\r\n          onChange={(e) => setSelectedDepartment(e.target.value ? Number(e.target.value) : null)}\r\n          className=\"border p-2 rounded\"\r\n        >\r\n          <option value=\"\">Select Department</option>\r\n          {departments.map((dept) => (\r\n            <option key={dept.id} value={dept.id}>\r\n              {dept.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedCourse ?? ''}\r\n          onChange={(e) => setSelectedCourse(e.target.value ? Number(e.target.value) : null)}\r\n          className=\"border p-2 rounded\"\r\n          disabled={!selectedDepartment}\r\n        >\r\n          <option value=\"\">Select Course</option>\r\n          {courses.map((course) => (\r\n            <option key={course.id} value={course.id}>\r\n              {course.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <table className=\"min-w-full bg-white border border-gray-200 rounded\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"py-2 px-4 border-b\">Student Name</th>\r\n            <th className=\"py-2 px-4 border-b\">Subject</th>\r\n            <th className=\"py-2 px-4 border-b\">Grade</th>\r\n            <th className=\"py-2 px-4 border-b\">Semester</th>\r\n            <th className=\"py-2 px-4 border-b\">Department</th>\r\n            <th className=\"py-2 px-4 border-b\">Course</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {results.length === 0 ? (\r\n            <tr>\r\n              <td colSpan={6} className=\"text-center py-4\">\r\n                No results found.\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            results.map((result) => (\r\n              <tr key={result.id}>\r\n                <td className=\"py-2 px-4 border-b\">{result.student_name}</td>\r\n                <td className=\"py-2 px-4 border-b\">{result.subject}</td>\r\n                <td className=\"py-2 px-4 border-b\">{result.grade}</td>\r\n                <td className=\"py-2 px-4 border-b\">{result.semester}</td>\r\n                <td className=\"py-2 px-4 border-b\">{getDepartmentName(result.department)}</td>\r\n                <td className=\"py-2 px-4 border-b\">{getCourseName(result.course)}</td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ResultManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}