{"ast":null,"code":"export class StudentModel {\n  constructor() {\n    this.students = [];\n  }\n  async fetchStudents(departmentId, semesterId) {\n    // API call to fetch students\n    const response = await fetch(`/api/students?department=${departmentId}&semester=${semesterId}`);\n    this.students = await response.json();\n    return this.students;\n  }\n  getStudents() {\n    return this.students;\n  }\n  getStudentById(id) {\n    return this.students.find(student => student.id === id);\n  }\n}","map":{"version":3,"names":["StudentModel","constructor","students","fetchStudents","departmentId","semesterId","response","fetch","json","getStudents","getStudentById","id","find","student"],"sources":["C:/UMI/Frontend/src/models/StudentModel.ts"],"sourcesContent":["export interface Student {\r\n  id: string;\r\n  student_id: string;\r\n  name: string;\r\n  roll_number: string;\r\n  email: string;\r\n  department: { name: string };\r\n  semester: { name: string };\r\n}\r\n\r\nexport class StudentModel {\r\n  private students: Student[] = [];\r\n\r\n  async fetchStudents(departmentId: number, semesterId: number): Promise<Student[]> {\r\n    // API call to fetch students\r\n    const response = await fetch(`/api/students?department=${departmentId}&semester=${semesterId}`);\r\n    this.students = await response.json();\r\n    return this.students;\r\n  }\r\n\r\n  getStudents(): Student[] {\r\n    return this.students;\r\n  }\r\n\r\n  getStudentById(id: string): Student | undefined {\r\n    return this.students.find(student => student.id === id);\r\n  }\r\n}\r\n"],"mappings":"AAUA,OAAO,MAAMA,YAAY,CAAC;EAAAC,YAAA;IAAA,KAChBC,QAAQ,GAAc,EAAE;EAAA;EAEhC,MAAMC,aAAaA,CAACC,YAAoB,EAAEC,UAAkB,EAAsB;IAChF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4BH,YAAY,aAAaC,UAAU,EAAE,CAAC;IAC/F,IAAI,CAACH,QAAQ,GAAG,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC;IACrC,OAAO,IAAI,CAACN,QAAQ;EACtB;EAEAO,WAAWA,CAAA,EAAc;IACvB,OAAO,IAAI,CAACP,QAAQ;EACtB;EAEAQ,cAAcA,CAACC,EAAU,EAAuB;IAC9C,OAAO,IAAI,CAACT,QAAQ,CAACU,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EACzD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}