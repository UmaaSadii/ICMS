{"ast":null,"code":"import _objectSpread from\"C:/UMI/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{academicsService}from'../api/academicsService_enhanced';import{instructorAttendanceService}from'../api/instructorAttendanceService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultUpload=()=>{const[departments,setDepartments]=useState([]);const[semesters,setSemesters]=useState([]);const[students,setStudents]=useState([]);const[selectedDepartment,setSelectedDepartment]=useState(null);const[selectedSemester,setSelectedSemester]=useState(null);const[selectedStudent,setSelectedStudent]=useState(null);const[results,setResults]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[showForm,setShowForm]=useState(false);const[formData,setFormData]=useState({subject:'',exam_type:'Mid Term',exam_date:new Date().toISOString().split('T')[0],total_marks:25,// Mid term is 25 marks\nobtained_marks:0,grade:''});const[assignedCourses,setAssignedCourses]=useState([]);useEffect(()=>{fetchDepartments();},[]);useEffect(()=>{if(selectedDepartment){const deptId=parseInt(selectedDepartment);if(!isNaN(deptId)){fetchSemesters(deptId);}setSelectedSemester(null);setStudents([]);setSelectedStudent(null);setResults([]);setAssignedCourses([]);}},[selectedDepartment]);useEffect(()=>{if(selectedDepartment&&selectedSemester){const deptId=parseInt(selectedDepartment);if(!isNaN(deptId)){fetchStudents(deptId,selectedSemester);}}},[selectedDepartment,selectedSemester]);// Update total marks when exam type changes\nuseEffect(()=>{const defaultTotal=getDefaultTotalMarks(formData.exam_type);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{total_marks:defaultTotal}));},[formData.exam_type]);const fetchDepartments=async()=>{try{setLoading(true);const response=await instructorAttendanceService.getDepartments();setDepartments(response);}catch(err){setError('Failed to fetch departments');}finally{setLoading(false);}};const fetchSemesters=async departmentId=>{try{setLoading(true);const response=await instructorAttendanceService.getSemestersByDepartment(departmentId);setSemesters(response);}catch(err){setError('Failed to fetch semesters');}finally{setLoading(false);}};const fetchStudents=async(departmentId,semesterId)=>{try{setLoading(true);const response=await instructorAttendanceService.getStudentsByDepartmentAndSemester(departmentId,semesterId);// Transform the response to match our Student interface\nconst transformedStudents=response.map(student=>{var _departments$find,_semesters$find;return{id:parseInt(student.student_id),// Use student_id as id\nstudent_id:student.student_id,name:student.name,roll_number:student.student_id,// Use student_id as roll_number\nemail:student.email,department:{name:((_departments$find=departments.find(d=>d.id===departmentId))===null||_departments$find===void 0?void 0:_departments$find.name)||'Unknown'},semester:{name:((_semesters$find=semesters.find(s=>s.id===semesterId))===null||_semesters$find===void 0?void 0:_semesters$find.name)||'Unknown'}};});setStudents(transformedStudents);}catch(err){setError('Failed to fetch students');}finally{setLoading(false);}};const fetchResults=async studentId=>{if(!studentId)return;try{setLoading(true);const response=await academicsService.getStudentResults(studentId);// Enhanced API returns an object with 'results' and 'assigned_courses' keys\nsetResults(response.data.results||[]);setAssignedCourses(response.data.assigned_courses||[]);}catch(err){setError('Failed to fetch results');}finally{setLoading(false);}};const handleStudentSelect=student=>{setSelectedStudent(student);fetchResults(student.id);};const getDefaultTotalMarks=examType=>{const examTypeLower=examType.toLowerCase();if(examTypeLower.includes('assignment'))return 5;if(examTypeLower.includes('mid'))return 25;if(examTypeLower.includes('final'))return 60;return 25;// Default to mid-term\n};const calculateGrade=(obtained,total)=>{const percentage=obtained/total*100;if(percentage>=90)return'A+';if(percentage>=85)return'A';if(percentage>=80)return'A-';if(percentage>=75)return'B+';if(percentage>=70)return'B';if(percentage>=65)return'B-';if(percentage>=60)return'C+';if(percentage>=55)return'C';if(percentage>=50)return'C-';if(percentage>=45)return'D+';if(percentage>=40)return'D';return'F';};const handleSubmit=async e=>{e.preventDefault();if(!selectedStudent||!selectedDepartment||!selectedSemester)return;// Find the selected course ID from assignedCourses\nconst selectedCourse=assignedCourses.find(course=>course.name===formData.subject);const courseId=selectedCourse?selectedCourse.course_id:null;// Map frontend fields to backend expected fields\nconst dataToSubmit={course_id:courseId,exam_type:formData.exam_type,exam_date:formData.exam_date,obtained_marks_input:formData.obtained_marks};try{setLoading(true);await academicsService.createStudentResult(selectedStudent.id,dataToSubmit);fetchResults(selectedStudent.id);setShowForm(false);setFormData({subject:'',exam_type:'Mid',exam_date:new Date().toISOString().split('T')[0],total_marks:25,// Default to Mid-term marks\nobtained_marks:0,grade:''});}catch(err){setError('Failed to create result record');}finally{setLoading(false);}};const handleDelete=async resultId=>{if(!window.confirm('Are you sure you want to delete this result record?'))return;try{setLoading(true);await academicsService.deleteResult(resultId);if(selectedStudent){fetchResults(selectedStudent.id);}}catch(err){setError('Failed to delete result record');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6\",children:\"Result Upload\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-4 rounded-lg shadow mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Department\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDepartment||'',onChange:e=>setSelectedDepartment(e.target.value||null),className:\"w-full p-2 border rounded\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Department\"}),departments.filter(dept=>dept.id!=null&&typeof dept.id==='number').map(dept=>/*#__PURE__*/_jsxs(\"option\",{value:dept.id.toString(),children:[dept.name,\" (\",dept.code,\")\"]},dept.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Semester\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedSemester||'',onChange:e=>setSelectedSemester(e.target.value?parseInt(e.target.value):null),className:\"w-full p-2 border rounded\",disabled:!selectedDepartment,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Semester\"}),semesters.filter(sem=>sem.id!=null&&typeof sem.id==='number').map(sem=>/*#__PURE__*/_jsx(\"option\",{value:sem.id,children:sem.name},sem.id))]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Select Student\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-96 overflow-y-auto\",children:students.map(student=>{var _student$department;return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleStudentSelect(student),className:\"p-3 border rounded cursor-pointer hover:bg-gray-50 \".concat((selectedStudent===null||selectedStudent===void 0?void 0:selectedStudent.id)===student.id?'bg-blue-50 border-blue-300':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:student.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Roll: \",student.roll_number,\" | Dept: \",(_student$department=student.department)===null||_student$department===void 0?void 0:_student$department.name]})]},student.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold\",children:[\"Results \",selectedStudent?\"for \".concat(selectedStudent.name):'']}),selectedStudent&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowForm(true),className:\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",children:\"Add Result\"})]}),selectedStudent?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[results.map(result=>/*#__PURE__*/_jsx(\"div\",{className:\"p-3 border rounded\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:result.subject}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[result.exam_type,\" - \",result.exam_date]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[\"Marks: \",result.obtained_marks,\"/\",result.total_marks,\" (\",(result.obtained_marks/result.total_marks*100).toFixed(1),\"%)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium \".concat(result.grade==='F'?'text-red-600':result.grade.startsWith('A')?'text-green-600':'text-blue-600'),children:[\"Grade: \",result.grade]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(result.result_id),className:\"text-red-600 hover:text-red-800\",children:\"Delete\"})]})},result.result_id)),results.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-center py-4\",children:\"No results found\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-center py-4\",children:\"Select a student to view results\"})]})]}),selectedDepartment&&selectedSemester&&students.length===0&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-center py-8\",children:\"No students found for the selected department and semester.\"})}),!selectedDepartment&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-center py-8\",children:\"Please select a department and semester to view students and upload results.\"})}),showForm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg w-96\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Add Result\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Subject\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.subject,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{subject:e.target.value})),className:\"w-full p-2 border rounded\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select subject\"}),assignedCourses.map(course=>/*#__PURE__*/_jsx(\"option\",{value:course.name,children:course.name},course.course_id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Exam Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.exam_type,onChange:e=>{const examType=e.target.value;let totalMarks=25;// Default\n// Set total marks based on exam type\nif(examType.includes('Quiz'))totalMarks=5;else if(examType.includes('Assignment'))totalMarks=5;else if(examType.includes('Mid'))totalMarks=25;else if(examType.includes('Final'))totalMarks=60;setFormData(_objectSpread(_objectSpread({},formData),{},{exam_type:examType,total_marks:totalMarks}));},className:\"w-full p-2 border rounded\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Quiz 1\",children:\"Quiz 1 (5 marks)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Quiz 2\",children:\"Quiz 2 (5 marks)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Assignment 1\",children:\"Assignment 1 (5 marks)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Assignment 2\",children:\"Assignment 2 (5 marks)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mid Term\",children:\"Mid Term (25 marks)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Final Exam\",children:\"Final Exam (60 marks)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Exam Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:formData.exam_date,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{exam_date:e.target.value})),className:\"w-full p-2 border rounded\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Total Marks\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.total_marks,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{total_marks:parseInt(e.target.value)})),className:\"w-full p-2 border rounded\",min:\"1\",required:true}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Auto-set based on exam type (Assignment: 5, Mid: 25, Final: 60)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Obtained Marks\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.obtained_marks,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{obtained_marks:parseInt(e.target.value)})),className:\"w-full p-2 border rounded\",min:\"0\",max:formData.total_marks,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Grade (Auto-calculated)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:calculateGrade(formData.obtained_marks,formData.total_marks),className:\"w-full p-2 border rounded bg-gray-100\",readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowForm(false),className:\"px-4 py-2 text-gray-600 hover:text-gray-800\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\",children:loading?'Saving...':'Save'})]})]})]})})]});};export default ResultUpload;","map":{"version":3,"names":["React","useState","useEffect","academicsService","instructorAttendanceService","jsx","_jsx","jsxs","_jsxs","ResultUpload","departments","setDepartments","semesters","setSemesters","students","setStudents","selectedDepartment","setSelectedDepartment","selectedSemester","setSelectedSemester","selectedStudent","setSelectedStudent","results","setResults","loading","setLoading","error","setError","success","setSuccess","showForm","setShowForm","formData","setFormData","subject","exam_type","exam_date","Date","toISOString","split","total_marks","obtained_marks","grade","assignedCourses","setAssignedCourses","fetchDepartments","deptId","parseInt","isNaN","fetchSemesters","fetchStudents","defaultTotal","getDefaultTotalMarks","prev","_objectSpread","response","getDepartments","err","departmentId","getSemestersByDepartment","semesterId","getStudentsByDepartmentAndSemester","transformedStudents","map","student","_departments$find","_semesters$find","id","student_id","name","roll_number","email","department","find","d","semester","s","fetchResults","studentId","getStudentResults","data","assigned_courses","handleStudentSelect","examType","examTypeLower","toLowerCase","includes","calculateGrade","obtained","total","percentage","handleSubmit","e","preventDefault","selectedCourse","course","courseId","course_id","dataToSubmit","obtained_marks_input","createStudentResult","handleDelete","resultId","window","confirm","deleteResult","className","children","value","onChange","target","filter","dept","toString","code","disabled","sem","_student$department","onClick","concat","result","toFixed","startsWith","result_id","length","onSubmit","required","totalMarks","type","min","max","readOnly"],"sources":["C:/UMI/Frontend/src/components/ResultUpload.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { academicsService } from '../api/academicsService_enhanced';\r\nimport { instructorAttendanceService, Department, Semester, Student as AttendanceStudent } from '../api/instructorAttendanceService';\r\n\r\ninterface Student {\r\n  id: number;\r\n  student_id: string;\r\n  name: string;\r\n  roll_number: string;\r\n  email: string;\r\n  department: { name: string };\r\n  semester: { name: string };\r\n}\r\n\r\ninterface Result {\r\n  result_id: number;\r\n  subject: string;\r\n  exam_type: string;\r\n  exam_date: string;\r\n  total_marks: number;\r\n  obtained_marks: number;\r\n  grade: string;\r\n}\r\n\r\nconst ResultUpload: React.FC = () => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [semesters, setSemesters] = useState<Semester[]>([]);\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<string | null>(null);\r\n  const [selectedSemester, setSelectedSemester] = useState<number | null>(null);\r\n  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null);\r\n  const [results, setResults] = useState<Result[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    subject: '',\r\n    exam_type: 'Mid Term',\r\n    exam_date: new Date().toISOString().split('T')[0],\r\n    total_marks: 25, // Mid term is 25 marks\r\n    obtained_marks: 0,\r\n    grade: ''\r\n  });\r\n\r\n  const [assignedCourses, setAssignedCourses] = useState<{course_id: number; name: string}[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDepartment) {\r\n      const deptId = parseInt(selectedDepartment);\r\n      if (!isNaN(deptId)) {\r\n        fetchSemesters(deptId);\r\n      }\r\n      setSelectedSemester(null);\r\n      setStudents([]);\r\n      setSelectedStudent(null);\r\n      setResults([]);\r\n      setAssignedCourses([]);\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDepartment && selectedSemester) {\r\n      const deptId = parseInt(selectedDepartment);\r\n      if (!isNaN(deptId)) {\r\n        fetchStudents(deptId, selectedSemester);\r\n      }\r\n    }\r\n  }, [selectedDepartment, selectedSemester]);\r\n\r\n  // Update total marks when exam type changes\r\n  useEffect(() => {\r\n    const defaultTotal = getDefaultTotalMarks(formData.exam_type);\r\n    setFormData(prev => ({ ...prev, total_marks: defaultTotal }));\r\n  }, [formData.exam_type]);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await instructorAttendanceService.getDepartments();\r\n      setDepartments(response);\r\n    } catch (err: any) {\r\n      setError('Failed to fetch departments');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSemesters = async (departmentId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await instructorAttendanceService.getSemestersByDepartment(departmentId);\r\n      setSemesters(response);\r\n    } catch (err: any) {\r\n      setError('Failed to fetch semesters');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async (departmentId: number, semesterId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await instructorAttendanceService.getStudentsByDepartmentAndSemester(departmentId, semesterId);\r\n      // Transform the response to match our Student interface\r\n      const transformedStudents: Student[] = response.map((student: AttendanceStudent) => ({\r\n        id: parseInt(student.student_id), // Use student_id as id\r\n        student_id: student.student_id,\r\n        name: student.name,\r\n        roll_number: student.student_id, // Use student_id as roll_number\r\n        email: student.email,\r\n        department: { name: departments.find(d => d.id === departmentId)?.name || 'Unknown' },\r\n        semester: { name: semesters.find(s => s.id === semesterId)?.name || 'Unknown' }\r\n      }));\r\n      setStudents(transformedStudents);\r\n    } catch (err: any) {\r\n      setError('Failed to fetch students');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchResults = async (studentId: number) => {\r\n    if (!studentId) return;\r\n    try {\r\n      setLoading(true);\r\n      const response = await academicsService.getStudentResults(studentId);\r\n      // Enhanced API returns an object with 'results' and 'assigned_courses' keys\r\n      setResults(response.data.results || []);\r\n      setAssignedCourses(response.data.assigned_courses || []);\r\n    } catch (err: any) {\r\n      setError('Failed to fetch results');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const handleStudentSelect = (student: Student) => {\r\n    setSelectedStudent(student);\r\n    fetchResults(student.id);\r\n  };\r\n\r\n  const getDefaultTotalMarks = (examType: string): number => {\r\n    const examTypeLower = examType.toLowerCase();\r\n    if (examTypeLower.includes('assignment')) return 5;\r\n    if (examTypeLower.includes('mid')) return 25;\r\n    if (examTypeLower.includes('final')) return 60;\r\n    return 25; // Default to mid-term\r\n  };\r\n\r\n  const calculateGrade = (obtained: number, total: number): string => {\r\n    const percentage = (obtained / total) * 100;\r\n    if (percentage >= 90) return 'A+';\r\n    if (percentage >= 85) return 'A';\r\n    if (percentage >= 80) return 'A-';\r\n    if (percentage >= 75) return 'B+';\r\n    if (percentage >= 70) return 'B';\r\n    if (percentage >= 65) return 'B-';\r\n    if (percentage >= 60) return 'C+';\r\n    if (percentage >= 55) return 'C';\r\n    if (percentage >= 50) return 'C-';\r\n    if (percentage >= 45) return 'D+';\r\n    if (percentage >= 40) return 'D';\r\n    return 'F';\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedStudent || !selectedDepartment || !selectedSemester) return;\r\n\r\n    // Find the selected course ID from assignedCourses\r\n    const selectedCourse = assignedCourses.find(course => course.name === formData.subject);\r\n    const courseId = selectedCourse ? selectedCourse.course_id : null;\r\n\r\n    // Map frontend fields to backend expected fields\r\n    const dataToSubmit = {\r\n      course_id: courseId,\r\n      exam_type: formData.exam_type,\r\n      exam_date: formData.exam_date,\r\n      obtained_marks_input: formData.obtained_marks\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      await academicsService.createStudentResult(selectedStudent.id, dataToSubmit);\r\n      fetchResults(selectedStudent.id);\r\n      setShowForm(false);\r\n      setFormData({\r\n        subject: '',\r\n        exam_type: 'Mid',\r\n        exam_date: new Date().toISOString().split('T')[0],\r\n        total_marks: 25, // Default to Mid-term marks\r\n        obtained_marks: 0,\r\n        grade: ''\r\n      });\r\n    } catch (err: any) {\r\n      setError('Failed to create result record');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (resultId: number) => {\r\n    if (!window.confirm('Are you sure you want to delete this result record?')) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      await academicsService.deleteResult(resultId);\r\n      if (selectedStudent) {\r\n        fetchResults(selectedStudent.id);\r\n      }\r\n    } catch (err: any) {\r\n      setError('Failed to delete result record');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Result Upload</h2>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* Selection Controls */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">Department</label>\r\n            <select\r\n              value={selectedDepartment || ''}\r\n              onChange={(e) => setSelectedDepartment(e.target.value || null)}\r\n              className=\"w-full p-2 border rounded\"\r\n            >\r\n              <option value=\"\">Select Department</option>\r\n              {departments\r\n                .filter((dept): dept is Department => dept.id != null && typeof dept.id === 'number')\r\n                .map((dept) => (\r\n                  <option key={dept.id} value={dept.id.toString()}>\r\n                    {dept.name} ({dept.code})\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-2\">Semester</label>\r\n            <select\r\n              value={selectedSemester || ''}\r\n              onChange={(e) => setSelectedSemester(e.target.value ? parseInt(e.target.value) : null)}\r\n              className=\"w-full p-2 border rounded\"\r\n              disabled={!selectedDepartment}\r\n            >\r\n              <option value=\"\">Select Semester</option>\r\n              {semesters\r\n                .filter((sem): sem is Semester => sem.id != null && typeof sem.id === 'number')\r\n                .map((sem) => (\r\n                  <option key={sem.id} value={sem.id}>\r\n                    {sem.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {/* Students List */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Select Student</h3>\r\n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n            {students.map((student) => (\r\n              <div\r\n                key={student.id}\r\n                onClick={() => handleStudentSelect(student)}\r\n                className={`p-3 border rounded cursor-pointer hover:bg-gray-50 ${\r\n                  selectedStudent?.id === student.id ? 'bg-blue-50 border-blue-300' : ''\r\n                }`}\r\n              >\r\n                <div className=\"font-medium\">{student.name}</div>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Roll: {student.roll_number} | Dept: {student.department?.name}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Results Records */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-semibold\">\r\n              Results {selectedStudent ? `for ${selectedStudent.name}` : ''}\r\n            </h3>\r\n            {selectedStudent && (\r\n              <button\r\n                onClick={() => setShowForm(true)}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n              >\r\n                Add Result\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {selectedStudent ? (\r\n            <div className=\"space-y-2\">\r\n              {results.map((result) => (\r\n                <div key={result.result_id} className=\"p-3 border rounded\">\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <div className=\"font-medium\">{result.subject}</div>\r\n                      <div className=\"text-sm text-gray-600\">\r\n                        {result.exam_type} - {result.exam_date}\r\n                      </div>\r\n                      <div className=\"text-sm\">\r\n                        Marks: {result.obtained_marks}/{result.total_marks} ({((result.obtained_marks / result.total_marks) * 100).toFixed(1)}%)\r\n                      </div>\r\n                      <div className={`text-sm font-medium ${\r\n                        result.grade === 'F' ? 'text-red-600' :\r\n                        result.grade.startsWith('A') ? 'text-green-600' : 'text-blue-600'\r\n                      }`}>\r\n                        Grade: {result.grade}\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleDelete(result.result_id)}\r\n                      className=\"text-red-600 hover:text-red-800\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              {results.length === 0 && (\r\n                <div className=\"text-gray-500 text-center py-4\">No results found</div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-gray-500 text-center py-4\">Select a student to view results</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {selectedDepartment && selectedSemester && students.length === 0 && !loading && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <div className=\"text-gray-500 text-center py-8\">\r\n            No students found for the selected department and semester.\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!selectedDepartment && (\r\n        <div className=\"bg-white p-4 rounded-lg shadow\">\r\n          <div className=\"text-gray-500 text-center py-8\">\r\n            Please select a department and semester to view students and upload results.\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add Result Form */}\r\n      {showForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded-lg w-96\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Add Result</h3>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Subject</label>\r\n                <select\r\n                  value={formData.subject}\r\n                  onChange={(e) => setFormData({...formData, subject: e.target.value})}\r\n                  className=\"w-full p-2 border rounded\"\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled>Select subject</option>\r\n                  {assignedCourses.map((course) => (\r\n                    <option key={course.course_id} value={course.name}>\r\n                      {course.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Exam Type</label>\r\n                <select\r\n                  value={formData.exam_type}\r\n                  onChange={(e) => {\r\n                    const examType = e.target.value;\r\n                    let totalMarks = 25; // Default\r\n\r\n                    // Set total marks based on exam type\r\n                    if (examType.includes('Quiz')) totalMarks = 5;\r\n                    else if (examType.includes('Assignment')) totalMarks = 5;\r\n                    else if (examType.includes('Mid')) totalMarks = 25;\r\n                    else if (examType.includes('Final')) totalMarks = 60;\r\n\r\n                    setFormData({...formData, exam_type: examType, total_marks: totalMarks});\r\n                  }}\r\n                  className=\"w-full p-2 border rounded\"\r\n                >\r\n                  <option value=\"Quiz 1\">Quiz 1 (5 marks)</option>\r\n                  <option value=\"Quiz 2\">Quiz 2 (5 marks)</option>\r\n                  <option value=\"Assignment 1\">Assignment 1 (5 marks)</option>\r\n                  <option value=\"Assignment 2\">Assignment 2 (5 marks)</option>\r\n                  <option value=\"Mid Term\">Mid Term (25 marks)</option>\r\n                  <option value=\"Final Exam\">Final Exam (60 marks)</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Exam Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={formData.exam_date}\r\n                  onChange={(e) => setFormData({...formData, exam_date: e.target.value})}\r\n                  className=\"w-full p-2 border rounded\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Total Marks</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={formData.total_marks}\r\n                  onChange={(e) => setFormData({...formData, total_marks: parseInt(e.target.value)})}\r\n                  className=\"w-full p-2 border rounded\"\r\n                  min=\"1\"\r\n                  required\r\n                />\r\n                <p className=\"text-xs text-gray-500 mt-1\">Auto-set based on exam type (Assignment: 5, Mid: 25, Final: 60)</p>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Obtained Marks</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={formData.obtained_marks}\r\n                  onChange={(e) => setFormData({...formData, obtained_marks: parseInt(e.target.value)})}\r\n                  className=\"w-full p-2 border rounded\"\r\n                  min=\"0\"\r\n                  max={formData.total_marks}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Grade (Auto-calculated)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={calculateGrade(formData.obtained_marks, formData.total_marks)}\r\n                  className=\"w-full p-2 border rounded bg-gray-100\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowForm(false)}\r\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {loading ? 'Saving...' : 'Save'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}