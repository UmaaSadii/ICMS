{"ast":null,"code":"import{createContext,useState,useContext,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import authService from\"../api/authService\";// Define types\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(!context)throw new Error(\"useAuth must be used within AuthProvider\");return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();// Check for existing user session on initial load\nuseEffect(()=>{const storedAuth=localStorage.getItem('auth');if(storedAuth){try{const authData=JSON.parse(storedAuth);setCurrentUser(authData.user);// Setup axios with the stored token\nif(authData.access_token){axios.defaults.headers.common['Authorization']=\"Token \".concat(authData.access_token);}}catch(err){console.error('Error parsing stored auth data:',err);localStorage.removeItem('auth');}}setLoading(false);},[]);const login=async(username,password)=>{try{setLoading(true);setError(null);const response=await authService.login({username,password});console.log('Login response in AuthContext:',response);if(!response){throw new Error('No response received from login');}const authData={user:response.user,access_token:response.access_token,refresh_token:response.refresh_token};console.log('Auth data being stored from login:',authData);setCurrentUser(authData.user);localStorage.setItem('auth',JSON.stringify(authData));// Set the authorization header for future requests\naxios.defaults.headers.common['Authorization']=\"Token \".concat(authData.access_token);// Redirect based on role\nif(authData.user.role===\"admin\"||authData.user.role===\"principal\"||authData.user.role===\"director\"){navigate(\"/admin\");}else if(authData.user.role===\"instructor\"){navigate(\"/teacher\");}else if(authData.user.role===\"staff\"){navigate(\"/staff\");}else if(authData.user.role===\"student\"){navigate(\"/student\");}else{navigate(\"/dashboard\");}}catch(err){console.error('Login error:',err);setError(\"Invalid credentials. Please try again.\");throw err;}finally{setLoading(false);}};const register=async userData=>{try{setLoading(true);setError(null);const response=await authService.register(userData);console.log('Registration response:',response);// The backend returns user data inside the response object\nif(!response.user){console.error('User data missing from response:',response);throw new Error('No user data received from registration');}const authData={user:response.user,access_token:response.access_token,refresh_token:response.refresh_token};console.log('Auth data being stored:',authData);setCurrentUser(authData.user);localStorage.setItem('auth',JSON.stringify(authData));// Set the authorization header for future requests\naxios.defaults.headers.common['Authorization']=\"Token \".concat(authData.access_token);// Redirect based on role after successful registration\nif(authData.user.role===\"admin\"||authData.user.role===\"principal\"||authData.user.role===\"director\"){navigate(\"/admin\");}else if(authData.user.role===\"staff\"){navigate(\"/staff\");}else if(authData.user.role===\"student\"){navigate(\"/student\");}else{navigate(\"/dashboard\");}}catch(err){var _err$response,_err$response2;console.error('Registration error details:',((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err.message||err);if((_err$response2=err.response)!==null&&_err$response2!==void 0&&_err$response2.data){// Extract error message from API response\nconst errorMessage=typeof err.response.data==='string'?err.response.data:Object.values(err.response.data).flat().join(', ');setError(errorMessage||\"Registration failed. Please try again.\");}else{setError(\"Registration failed. Please try again.\");}throw err;}finally{setLoading(false);}};const logout=()=>{setCurrentUser(null);// Call the authService logout method to clean up auth data\nauthService.logout();navigate(\"/login\");};// Force logout function for debugging/testing\nconst forceLogout=()=>{console.log('Force logout called - clearing all auth data');setCurrentUser(null);localStorage.removeItem('auth');localStorage.clear();// Clear all localStorage\ndelete axios.defaults.headers.common['Authorization'];navigate(\"/login\");};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser,login,register,logout,forceLogout,loading,error,isAuthenticated:!!currentUser},children:children});};","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useNavigate","axios","authService","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","error","setError","navigate","storedAuth","localStorage","getItem","authData","JSON","parse","user","access_token","defaults","headers","common","concat","err","console","removeItem","login","username","password","response","log","refresh_token","setItem","stringify","role","register","userData","_err$response","_err$response2","data","message","errorMessage","Object","values","flat","join","logout","forceLogout","clear","Provider","value","isAuthenticated"],"sources":["C:/UMI/Frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useState, useContext, ReactNode, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport authService from \"../api/authService\";\n\n// Define types\ninterface User {\n  id: number;\n  role: \"student\" | \"staff\" | \"admin\" | \"principal\" | \"director\" | \"instructor\";\n  username: string;\n  email: string;\n  [key: string]: any;\n}\n\ninterface AuthData {\n  user: User;\n  access_token: string;\n  refresh_token: string;\n}\n\ninterface AuthContextType {\n  currentUser: User | null;\n  login: (username: string, password: string) => Promise<void>;\n  register: (userData: any) => Promise<void>;\n  logout: () => void;\n  forceLogout: () => void;\n  loading: boolean;\n  error: string | null;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n};\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  \n  // Check for existing user session on initial load\n  useEffect(() => {\n    const storedAuth = localStorage.getItem('auth');\n    if (storedAuth) {\n      try {\n        const authData: AuthData = JSON.parse(storedAuth);\n        setCurrentUser(authData.user);\n        \n        // Setup axios with the stored token\n      if (authData.access_token) {\n        axios.defaults.headers.common['Authorization'] = `Token ${authData.access_token}`;\n      }\n    } catch (err) {\n      console.error('Error parsing stored auth data:', err);\n      localStorage.removeItem('auth');\n    }\n  }\n  setLoading(false);\n}, []);\n\nconst login = async (username: string, password: string) => {\n  try {\n    setLoading(true);\n    setError(null);\n    const response = await authService.login({ username, password });\n    \n    console.log('Login response in AuthContext:', response);\n    \n    if (!response) {\n      throw new Error('No response received from login');\n    }\n    \n    const authData: AuthData = {\n      user: response.user,\n      access_token: response.access_token,\n      refresh_token: response.refresh_token\n    };\n    \n    console.log('Auth data being stored from login:', authData);\n    \n    setCurrentUser(authData.user);\n    localStorage.setItem('auth', JSON.stringify(authData));\n    \n    // Set the authorization header for future requests\n    axios.defaults.headers.common['Authorization'] = `Token ${authData.access_token}`;\n    \n      // Redirect based on role\n      if (authData.user.role === \"admin\" || authData.user.role === \"principal\" || authData.user.role === \"director\") {\n        navigate(\"/admin\");\n      } else if (authData.user.role === \"instructor\") {\n        navigate(\"/teacher\");\n      } else if (authData.user.role === \"staff\") {\n        navigate(\"/staff\");\n      } else if (authData.user.role === \"student\") {\n        navigate(\"/student\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n  } catch (err) {\n    console.error('Login error:', err);\n    setError(\"Invalid credentials. Please try again.\");\n    throw err;\n  } finally {\n    setLoading(false);\n  }\n};\n\n  const register = async (userData: any) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authService.register(userData);\n      \n      console.log('Registration response:', response);\n      \n      // The backend returns user data inside the response object\n      if (!response.user) {\n        console.error('User data missing from response:', response);\n        throw new Error('No user data received from registration');\n      }\n      \n      const authData: AuthData = {\n        user: response.user,\n        access_token: response.access_token,\n        refresh_token: response.refresh_token\n      };\n      \n      console.log('Auth data being stored:', authData);\n      \n      setCurrentUser(authData.user);\n      localStorage.setItem('auth', JSON.stringify(authData));\n      \n      // Set the authorization header for future requests\n      axios.defaults.headers.common['Authorization'] = `Token ${authData.access_token}`;\n\n      // Redirect based on role after successful registration\n      if (authData.user.role === \"admin\" || authData.user.role === \"principal\" || authData.user.role === \"director\") {\n        navigate(\"/admin\");\n      } else if (authData.user.role === \"staff\") {\n        navigate(\"/staff\");\n      } else if (authData.user.role === \"student\") {\n        navigate(\"/student\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n    } catch (err: any) {\n      console.error('Registration error details:', err.response?.data || err.message || err);\n      if (err.response?.data) {\n        // Extract error message from API response\n        const errorMessage = typeof err.response.data === 'string'\n          ? err.response.data\n          : Object.values(err.response.data).flat().join(', ');\n        setError(errorMessage || \"Registration failed. Please try again.\");\n      } else {\n        setError(\"Registration failed. Please try again.\");\n      }\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const logout = () => {\n    setCurrentUser(null);\n    // Call the authService logout method to clean up auth data\n    authService.logout();\n    navigate(\"/login\");\n  };\n\n  // Force logout function for debugging/testing\n  const forceLogout = () => {\n    console.log('Force logout called - clearing all auth data');\n    setCurrentUser(null);\n    localStorage.removeItem('auth');\n    localStorage.clear(); // Clear all localStorage\n    delete axios.defaults.headers.common['Authorization'];\n    navigate(\"/login\");\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      currentUser,\n      login,\n      register,\n      logout,\n      forceLogout,\n      loading,\n      error,\n      isAuthenticated: !!currentUser\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}