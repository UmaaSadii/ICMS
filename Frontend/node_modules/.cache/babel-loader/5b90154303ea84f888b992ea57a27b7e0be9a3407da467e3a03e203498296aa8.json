{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{departmentService}from'../api/apiService';import{jsx as _jsx}from\"react/jsx-runtime\";const DepartmentContext=/*#__PURE__*/createContext(undefined);export const DepartmentProvider=_ref=>{let{children}=_ref;const[departments,setDepartments]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchDepartments=async()=>{if(departments.length>0)return;// Avoid refetching if already loaded\nsetLoading(true);setError(null);try{const response=await departmentService.getAllDepartments();setDepartments(response.data);}catch(err){setError(err.message||'Failed to fetch departments');console.error('Error fetching departments:',err);}finally{setLoading(false);}};const refreshDepartments=async()=>{setLoading(true);setError(null);try{const response=await departmentService.getAllDepartments();setDepartments(response.data);}catch(err){setError(err.message||'Failed to refresh departments');console.error('Error refreshing departments:',err);}finally{setLoading(false);}};useEffect(()=>{fetchDepartments();},[]);const value={departments,loading,error,fetchDepartments,refreshDepartments};return/*#__PURE__*/_jsx(DepartmentContext.Provider,{value:value,children:children});};export const useDepartment=()=>{const context=useContext(DepartmentContext);if(context===undefined){throw new Error('useDepartment must be used within a DepartmentProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","departmentService","jsx","_jsx","DepartmentContext","undefined","DepartmentProvider","_ref","children","departments","setDepartments","loading","setLoading","error","setError","fetchDepartments","length","response","getAllDepartments","data","err","message","console","refreshDepartments","value","Provider","useDepartment","context","Error"],"sources":["C:/UMI/Frontend/src/context/DepartmentContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { departmentService } from '../api/apiService';\r\n\r\ninterface Department {\r\n  department_id: number;\r\n  name: string;\r\n  code: string;\r\n  description?: string;\r\n}\r\n\r\ninterface DepartmentContextType {\r\n  departments: Department[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  fetchDepartments: () => Promise<void>;\r\n  refreshDepartments: () => Promise<void>;\r\n}\r\n\r\nconst DepartmentContext = createContext<DepartmentContextType | undefined>(undefined);\r\n\r\ninterface DepartmentProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const DepartmentProvider: React.FC<DepartmentProviderProps> = ({ children }) => {\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchDepartments = async () => {\r\n    if (departments.length > 0) return; // Avoid refetching if already loaded\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await departmentService.getAllDepartments();\r\n      setDepartments(response.data);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to fetch departments');\r\n      console.error('Error fetching departments:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshDepartments = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await departmentService.getAllDepartments();\r\n      setDepartments(response.data);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to refresh departments');\r\n      console.error('Error refreshing departments:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const value: DepartmentContextType = {\r\n    departments,\r\n    loading,\r\n    error,\r\n    fetchDepartments,\r\n    refreshDepartments,\r\n  };\r\n\r\n  return (\r\n    <DepartmentContext.Provider value={value}>\r\n      {children}\r\n    </DepartmentContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDepartment = (): DepartmentContextType => {\r\n  const context = useContext(DepartmentContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDepartment must be used within a DepartmentProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CACxF,OAASC,iBAAiB,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAiBtD,KAAM,CAAAC,iBAAiB,cAAGP,aAAa,CAAoCQ,SAAS,CAAC,CAMrF,MAAO,MAAM,CAAAC,kBAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAe,EAAE,CAAC,CAChE,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAU,KAAK,CAAC,CACtD,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAgB,IAAI,CAAC,CAEvD,KAAM,CAAAgB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAIN,WAAW,CAACO,MAAM,CAAG,CAAC,CAAE,OAAQ;AAEpCJ,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAhB,iBAAiB,CAACiB,iBAAiB,CAAC,CAAC,CAC5DR,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC,CAC/B,CAAE,MAAOC,GAAQ,CAAE,CACjBN,QAAQ,CAACM,GAAG,CAACC,OAAO,EAAI,6BAA6B,CAAC,CACtDC,OAAO,CAACT,KAAK,CAAC,6BAA6B,CAAEO,GAAG,CAAC,CACnD,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAW,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrCX,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAhB,iBAAiB,CAACiB,iBAAiB,CAAC,CAAC,CAC5DR,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC,CAC/B,CAAE,MAAOC,GAAQ,CAAE,CACjBN,QAAQ,CAACM,GAAG,CAACC,OAAO,EAAI,+BAA+B,CAAC,CACxDC,OAAO,CAACT,KAAK,CAAC,+BAA+B,CAAEO,GAAG,CAAC,CACrD,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDZ,SAAS,CAAC,IAAM,CACde,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,KAA4B,CAAG,CACnCf,WAAW,CACXE,OAAO,CACPE,KAAK,CACLE,gBAAgB,CAChBQ,kBACF,CAAC,CAED,mBACEpB,IAAA,CAACC,iBAAiB,CAACqB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAhB,QAAA,CACtCA,QAAQ,CACiB,CAAC,CAEjC,CAAC,CAED,MAAO,MAAM,CAAAkB,aAAa,CAAGA,CAAA,GAA6B,CACxD,KAAM,CAAAC,OAAO,CAAG7B,UAAU,CAACM,iBAAiB,CAAC,CAC7C,GAAIuB,OAAO,GAAKtB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAuB,KAAK,CAAC,wDAAwD,CAAC,CAC3E,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}