{"ast":null,"code":"import{api}from'./api';export const academicsService={getDepartments:()=>api.get('academics/departments/'),getCourses:()=>api.get('academics/courses/'),getCoursesByDepartment:departmentId=>api.get(\"academics/departments/\".concat(departmentId,\"/courses/\")),getCoursesBySemester:semesterId=>api.get(\"academics/semesters/\".concat(semesterId,\"/courses/\")),// Attendance APIs\ngetStudentAttendance:studentId=>api.get(\"academics/students/\".concat(studentId,\"/attendance/\")),createStudentAttendance:(studentId,data)=>api.post(\"academics/students/\".concat(studentId,\"/attendance/\"),data),updateAttendance:(attendanceId,data)=>api.put(\"academics/attendance/\".concat(attendanceId,\"/\"),data),deleteAttendance:attendanceId=>api.delete(\"academics/attendance/\".concat(attendanceId,\"/\")),// Result APIs\ngetResultsByDepartmentCourse:(departmentId,courseId)=>api.get(\"academics/departments/\".concat(departmentId,\"/courses/\").concat(courseId,\"/results/professional/\")),getStudentResults:studentId=>api.get(\"academics/students/\".concat(studentId,\"/results/professional/\")),createStudentResult:(studentId,data)=>api.post(\"academics/students/\".concat(studentId,\"/results/professional/\"),data),updateResult:(resultId,data)=>api.put(\"academics/results/\".concat(resultId,\"/\"),data),deleteResult:resultId=>api.delete(\"academics/results/\".concat(resultId,\"/\")),// Fee APIs\ngetFees:filters=>{const params=new URLSearchParams();if(filters!==null&&filters!==void 0&&filters.department)params.append('department',filters.department.toString());if(filters!==null&&filters!==void 0&&filters.semester)params.append('semester',filters.semester.toString());console.log('Fee API filters:',params.toString());return api.get(\"academics/fees/?\".concat(params.toString()));},getStudentFees:studentId=>api.get(\"academics/students/\".concat(studentId,\"/fees/\")),createStudentFee:(studentId,data)=>api.post(\"academics/students/\".concat(studentId,\"/fees/\"),data),updateFee:(feeId,data)=>api.put(\"academics/fees/\".concat(feeId,\"/\"),data),deleteFee:feeId=>api.delete(\"academics/fees/\".concat(feeId,\"/\")),// Student APIs\ngetStudents:filters=>{const params=new URLSearchParams();if(filters!==null&&filters!==void 0&&filters.department)params.append('department',filters.department.toString());if(filters!==null&&filters!==void 0&&filters.semester)params.append('semester',filters.semester.toString());console.log('Student API filters:',params.toString());return api.get(\"students/?\".concat(params.toString()));},getStudent:studentId=>api.get(\"students/students/\".concat(studentId,\"/\")),// Semester APIs\ngetSemesters:()=>api.get('academics/semesters/'),getSemester:semesterId=>api.get(\"academics/semesters/\".concat(semesterId,\"/\")),getSemestersByDepartment:departmentId=>api.get(\"academics/departments/\".concat(departmentId,\"/semesters/\")),// Fee Structure APIs\ngetFeeStructures:()=>api.get('academics/fee-structures/'),createFeeStructure:data=>api.post('academics/fee-structures/',data),updateFeeStructure:(id,data)=>api.put(\"academics/fee-structures/\".concat(id,\"/\"),data),deleteFeeStructure:id=>api.delete(\"academics/fee-structures/\".concat(id,\"/\"))// Add other academic related API calls here\n};","map":{"version":3,"names":["api","academicsService","getDepartments","get","getCourses","getCoursesByDepartment","departmentId","concat","getCoursesBySemester","semesterId","getStudentAttendance","studentId","createStudentAttendance","data","post","updateAttendance","attendanceId","put","deleteAttendance","delete","getResultsByDepartmentCourse","courseId","getStudentResults","createStudentResult","updateResult","resultId","deleteResult","getFees","filters","params","URLSearchParams","department","append","toString","semester","console","log","getStudentFees","createStudentFee","updateFee","feeId","deleteFee","getStudents","getStudent","getSemesters","getSemester","getSemestersByDepartment","getFeeStructures","createFeeStructure","updateFeeStructure","id","deleteFeeStructure"],"sources":["c:/UMI/Frontend/src/api/academicsService.ts"],"sourcesContent":["import { api } from './api';\r\n\r\nexport const academicsService = {\r\n  getDepartments: () => api.get('academics/departments/'),\r\n  getCourses: () => api.get('academics/courses/'),\r\n  getCoursesByDepartment: (departmentId: number) => api.get(`academics/departments/${departmentId}/courses/`),\r\n  getCoursesBySemester: (semesterId: number) => api.get(`academics/semesters/${semesterId}/courses/`),\r\n\r\n  // Attendance APIs\r\n  getStudentAttendance: (studentId: string) => api.get(`academics/students/${studentId}/attendance/`),\r\n  createStudentAttendance: (studentId: number, data: any) => api.post(`academics/students/${studentId}/attendance/`, data),\r\n  updateAttendance: (attendanceId: number, data: any) => api.put(`academics/attendance/${attendanceId}/`, data),\r\n  deleteAttendance: (attendanceId: number) => api.delete(`academics/attendance/${attendanceId}/`),\r\n\r\n  // Result APIs\r\n  getResultsByDepartmentCourse: (departmentId: number, courseId: number) => api.get(`academics/departments/${departmentId}/courses/${courseId}/results/professional/`),\r\n  getStudentResults: (studentId: string) => api.get(`academics/students/${studentId}/results/professional/`),\r\n  createStudentResult: (studentId: string, data: any) => api.post(`academics/students/${studentId}/results/professional/`, data),\r\n  updateResult: (resultId: number, data: any) => api.put(`academics/results/${resultId}/`, data),\r\n  deleteResult: (resultId: number) => api.delete(`academics/results/${resultId}/`),\r\n\r\n  // Fee APIs\r\n  getFees: (filters?: { department?: number; semester?: number }) => {\r\n    const params = new URLSearchParams();\r\n    if (filters?.department) params.append('department', filters.department.toString());\r\n    if (filters?.semester) params.append('semester', filters.semester.toString());\r\n    console.log('Fee API filters:', params.toString());\r\n    return api.get(`academics/fees/?${params.toString()}`);\r\n  },\r\n  getStudentFees: (studentId: number) => api.get(`academics/students/${studentId}/fees/`),\r\n  createStudentFee: (studentId: number, data: any) => api.post(`academics/students/${studentId}/fees/`, data),\r\n  updateFee: (feeId: number, data: any) => api.put(`academics/fees/${feeId}/`, data),\r\n  deleteFee: (feeId: number) => api.delete(`academics/fees/${feeId}/`),\r\n\r\n  // Student APIs\r\n  getStudents: (filters?: { department?: number; semester?: number }) => {\r\n    const params = new URLSearchParams();\r\n    if (filters?.department) params.append('department', filters.department.toString());\r\n    if (filters?.semester) params.append('semester', filters.semester.toString());\r\n    console.log('Student API filters:', params.toString());\r\n    return api.get(`students/?${params.toString()}`);\r\n  },\r\n  getStudent: (studentId: string) => api.get(`students/students/${studentId}/`),\r\n\r\n  // Semester APIs\r\n  getSemesters: () => api.get('academics/semesters/'),\r\n  getSemester: (semesterId: number) => api.get(`academics/semesters/${semesterId}/`),\r\n  getSemestersByDepartment: (departmentId: number) => api.get(`academics/departments/${departmentId}/semesters/`),\r\n\r\n  // Fee Structure APIs\r\n  getFeeStructures: () => api.get('academics/fee-structures/'),\r\n  createFeeStructure: (data: any) => api.post('academics/fee-structures/', data),\r\n  updateFeeStructure: (id: number, data: any) => api.put(`academics/fee-structures/${id}/`, data),\r\n  deleteFeeStructure: (id: number) => api.delete(`academics/fee-structures/${id}/`),\r\n\r\n  // Add other academic related API calls here\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}