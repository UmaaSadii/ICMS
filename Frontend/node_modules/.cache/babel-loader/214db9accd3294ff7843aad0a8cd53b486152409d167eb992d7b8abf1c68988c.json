{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || \"http://127.0.0.1:8000/api/\" // your Django DRF base URL\n  // Removed default Content-Type to allow automatic setting for FormData\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(function (config) {\n  // Get the token from localStorage\n  const storedAuth = localStorage.getItem('auth');\n  if (storedAuth) {\n    try {\n      const authData = JSON.parse(storedAuth);\n      if (authData.access_token) {\n        config.headers.Authorization = `Token ${authData.access_token}`;\n        // Ensure the header is properly set\n        console.log('Setting auth header:', `Token ${authData.access_token}`);\n      } else {\n        console.warn('No access token found in auth data');\n      }\n    } catch (err) {\n      console.error('Error parsing stored auth data:', err);\n      localStorage.removeItem('auth'); // Remove invalid auth data\n    }\n  } else {\n    console.warn('No auth data found in localStorage');\n  }\n  return config;\n});\n\n// Add a response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    if (error.response.status === 401) {\n      console.error('Unauthorized request:', error.config.url);\n      // Show a more user-friendly message\n      error.message = 'Please login to access this feature';\n    } else if (error.response.status === 403) {\n      console.error('Forbidden request:', error.config.url);\n      error.message = 'You do not have permission to perform this action';\n    } else if (error.response.status === 400) {\n      console.error('Bad request:', error.config.url, error.response.data);\n      // Extract error message from response if available\n      if (error.response.data && typeof error.response.data === 'object') {\n        const firstErrorKey = Object.keys(error.response.data)[0];\n        if (firstErrorKey) {\n          error.message = `${firstErrorKey}: ${error.response.data[firstErrorKey]}`;\n        }\n      }\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: data => api.post(\"login/\", data),\n  register: data => api.post(\"register/\", data),\n  logout: () => {\n    localStorage.removeItem('auth');\n    delete api.defaults.headers.common['Authorization'];\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_BASE_URL","interceptors","request","use","config","storedAuth","localStorage","getItem","authData","JSON","parse","access_token","headers","Authorization","console","log","warn","err","error","removeItem","response","status","url","message","data","firstErrorKey","Object","keys","Promise","reject","authService","login","post","register","logout","defaults","common"],"sources":["C:/UMI/Frontend/src/api/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || \"http://127.0.0.1:8000/api/\", // your Django DRF base URL\n  // Removed default Content-Type to allow automatic setting for FormData\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(function (config) {\n  // Get the token from localStorage\n  const storedAuth = localStorage.getItem('auth');\n  if (storedAuth) {\n    try {\n      const authData = JSON.parse(storedAuth);\n      if (authData.access_token) {\n        config.headers.Authorization = `Token ${authData.access_token}`;\n        // Ensure the header is properly set\n        console.log('Setting auth header:', `Token ${authData.access_token}`);\n      } else {\n        console.warn('No access token found in auth data');\n      }\n    } catch (err) {\n      console.error('Error parsing stored auth data:', err);\n      localStorage.removeItem('auth'); // Remove invalid auth data\n    }\n  } else {\n    console.warn('No auth data found in localStorage');\n  }\n  return config;\n});\n\n// Add a response interceptor to handle auth errors\napi.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response) {\n      if (error.response.status === 401) {\n        console.error('Unauthorized request:', error.config.url);\n        // Show a more user-friendly message\n        error.message = 'Please login to access this feature';\n      } else if (error.response.status === 403) {\n        console.error('Forbidden request:', error.config.url);\n        error.message = 'You do not have permission to perform this action';\n      } else if (error.response.status === 400) {\n        console.error('Bad request:', error.config.url, error.response.data);\n        // Extract error message from response if available\n        if (error.response.data && typeof error.response.data === 'object') {\n          const firstErrorKey = Object.keys(error.response.data)[0];\n          if (firstErrorKey) {\n            error.message = `${firstErrorKey}: ${error.response.data[firstErrorKey]}`;\n          }\n        }\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  login: (data: { username: string; password: string }) =>\n    api.post(\"login/\", data),\n  register: (data: any) => api.post(\"register/\", data),\n  logout: () => {\n    localStorage.removeItem('auth');\n    delete api.defaults.headers.common['Authorization'];\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}