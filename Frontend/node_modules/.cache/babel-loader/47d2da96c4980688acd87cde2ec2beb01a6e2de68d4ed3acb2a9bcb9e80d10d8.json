{"ast":null,"code":"var _jsxFileName = \"C:\\\\UMI\\\\Frontend\\\\src\\\\pages\\\\AdminDashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useAuth } from '../context/AuthContext';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { departmentService, courseService, studentService } from '../api/apiService';\nimport { instructorService } from '../api/studentInstructorService';\nimport { academicsService } from '../api/academicsService_enhanced';\nimport StudentManagement from '../components/pages/StudentManagement';\nimport DepartmentManagement from '../components/pages/DepartmentManagement';\nimport CourseManagement from '../components/pages/CourseManagement';\nimport TeacherManagement from '../components/pages/TeacherManagement';\nimport MessagingSystem from '../components/messaging/MessagingSystem';\nimport SystemHealthWidget from '../components/dashboard/SystemHealthWidget';\nimport { jsPDF } from 'jspdf';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\n// TypeScript interfaces for data structures\n\nconst AdminDashboard = () => {\n  _s();\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  // Results tab state\n  const [departments, setDepartments] = useState([]);\n  const [semesters, setSemesters] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [selectedSemester, setSelectedSemester] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [studentResults, setStudentResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // New state for exam types and selected exam types\n  const [examTypes, setExamTypes] = useState([]);\n  const [selectedExamTypes, setSelectedExamTypes] = useState([]);\n\n  // Add header animation effect\n  useEffect(() => {\n    const header = document.querySelector('.admin-header');\n    if (header) {\n      header.classList.add('animate-fadeIn');\n    }\n  }, []);\n\n  // Admin data state\n  const [adminData, setAdminData] = useState({\n    users: [],\n    departments: [],\n    stats: {\n      totalUsers: 1200,\n      activeUsers: 850,\n      totalDepartments: 25,\n      totalCourses: 40,\n      totalStudents: 1000,\n      totalStaff: 200\n    }\n  });\n\n  // Fetch real data for dashboard stats\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const [studentsRes, departmentsRes, coursesRes, instructorsRes] = await Promise.all([studentService.getAllStudents(), departmentService.getAllDepartments(), courseService.getAllCourses(), instructorService.getAllInstructors()]);\n        const totalUsers = studentsRes.data.length + instructorsRes.data.length;\n        const activeUsers = Math.floor(totalUsers * 0.7); // Assuming 70% are active\n\n        setAdminData({\n          users: [...studentsRes.data, ...instructorsRes.data],\n          departments: departmentsRes.data,\n          stats: {\n            totalUsers,\n            activeUsers,\n            totalDepartments: departmentsRes.data.length,\n            totalCourses: coursesRes.data.length,\n            totalStudents: studentsRes.data.length,\n            totalStaff: instructorsRes.data.length\n          }\n        });\n      } catch (error) {\n        console.error('Failed to fetch admin dashboard data:', error);\n        // Keep default values if fetch fails\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // Fetch departments for results tab\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await academicsService.getDepartments();\n        setDepartments(response.data);\n      } catch (error) {\n        console.error('Failed to fetch departments:', error);\n      }\n    };\n    if (activeTab === 'results') {\n      fetchDepartments();\n    }\n  }, [activeTab]);\n\n  // Fetch semesters when department is selected\n  useEffect(() => {\n    const fetchSemesters = async () => {\n      if (!selectedDepartment) {\n        setSemesters([]);\n        setSelectedSemester(null);\n        return;\n      }\n      try {\n        const response = await academicsService.getSemestersByDepartment(selectedDepartment);\n        setSemesters(response.data);\n        setSelectedSemester(null); // Reset semester selection\n        setSelectedStudent(null); // Reset student selection\n        setStudentResults([]);\n      } catch (error) {\n        console.error('Failed to fetch semesters:', error);\n        setSemesters([]);\n      }\n    };\n    if (selectedDepartment) {\n      fetchSemesters();\n    }\n  }, [selectedDepartment]);\n\n  // Fetch students when semester is selected\n  useEffect(() => {\n    const fetchStudents = async () => {\n      if (!selectedDepartment || !selectedSemester) {\n        setStudents([]);\n        setSelectedStudent(null);\n        setStudentResults([]);\n        return;\n      }\n      try {\n        setLoading(true);\n        // Use server-side filtering instead of client-side filtering\n        const response = await studentService.getAllStudents({\n          department: selectedDepartment,\n          semester: selectedSemester\n        });\n        setStudents(response.data);\n        setSelectedStudent(null); // Reset student selection\n        setStudentResults([]);\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (selectedDepartment && selectedSemester) {\n      fetchStudents();\n    }\n  }, [selectedDepartment, selectedSemester]);\n\n  // Normalize student results to ensure consistent course and GPA fields\n  const normalizeStudentResults = results => {\n    // Group results by course and exam_type to handle multiple exam types per course\n    const groupedResults = {};\n    results.forEach(result => {\n      var _result$course, _result$course2, _result$course3;\n      const courseKey = typeof result.course === 'string' ? result.course : ((_result$course = result.course) === null || _result$course === void 0 ? void 0 : _result$course.name) || ((_result$course2 = result.course) === null || _result$course2 === void 0 ? void 0 : _result$course2.course_name) || ((_result$course3 = result.course) === null || _result$course3 === void 0 ? void 0 : _result$course3.title) || 'N/A';\n      const examType = result.exam_type || 'default';\n      if (!groupedResults[courseKey]) {\n        groupedResults[courseKey] = {};\n      }\n      groupedResults[courseKey][examType] = result;\n    });\n\n    // Flatten grouped results into an array with combined exam types\n    const normalizedResults = Object.entries(groupedResults).map(([courseKey, exams]) => {\n      let departmentName = 'N/A';\n      let gpaValue = 'N/A';\n\n      // Use the first exam's department info as representative\n      const firstExam = Object.values(exams)[0];\n      if (firstExam) {\n        if (firstExam.department) {\n          if (typeof firstExam.department === 'object' && firstExam.department !== null) {\n            departmentName = firstExam.department.name || firstExam.department.department_name || 'N/A';\n          } else if (typeof firstExam.department === 'string') {\n            departmentName = firstExam.department;\n          }\n        }\n\n        // Extract GPA from percentage or other fields safely\n        if (firstExam.percentage !== undefined && firstExam.percentage !== null) {\n          gpaValue = firstExam.percentage.toString();\n        } else if (firstExam.gpa !== undefined && firstExam.gpa !== null) {\n          gpaValue = firstExam.gpa.toString();\n        } else if (firstExam.grade_point !== undefined && firstExam.grade_point !== null) {\n          gpaValue = firstExam.grade_point.toString();\n        } else if (firstExam.grade_point_value !== undefined && firstExam.grade_point_value !== null) {\n          gpaValue = firstExam.grade_point_value.toString();\n        }\n      }\n\n      // Calculate combined GPA for all exam types if needed\n      const gpaValues = Object.values(exams).map(exam => {\n        if (exam.gpa !== undefined && exam.gpa !== null) return Number(exam.gpa);\n        if (exam.percentage !== undefined && exam.percentage !== null) return Number(exam.percentage);\n        if (exam.grade_point !== undefined && exam.grade_point !== null) return Number(exam.grade_point);\n        if (exam.grade_point_value !== undefined && exam.grade_point_value !== null) return Number(exam.grade_point_value);\n        return null;\n      }).filter(val => val !== null);\n      if (gpaValues.length > 0) {\n        const avgGpa = gpaValues.reduce((acc, val) => acc + val, 0) / gpaValues.length;\n        gpaValue = avgGpa.toFixed(2);\n      }\n      return {\n        course: courseKey,\n        exams,\n        normalizedCourseName: courseKey,\n        normalizedDepartmentName: departmentName,\n        normalizedGPA: gpaValue\n      };\n    });\n    return normalizedResults;\n  };\n\n  // Fetch student results when student is selected\n  useEffect(() => {\n    const fetchStudentResults = async () => {\n      if (!selectedStudent) return;\n      try {\n        setLoading(true);\n        const response = await academicsService.getStudentResults(selectedStudent);\n        console.log('Raw student results response:', response.data);\n        let rawResults = [];\n\n        // Extract results array from response.data object\n        if (response.data && typeof response.data === 'object' && Array.isArray(response.data.results)) {\n          rawResults = response.data.results;\n        } else if (Array.isArray(response.data)) {\n          rawResults = response.data;\n        } else {\n          rawResults = [];\n          console.warn('Unexpected student results format:', response.data);\n        }\n        const normalizedResults = normalizeStudentResults(rawResults);\n        setStudentResults(normalizedResults);\n\n        // Extract unique exam types from results\n        const uniqueExamTypes = Array.from(new Set(rawResults.map(r => r.exam_type).filter(Boolean)));\n        setExamTypes(uniqueExamTypes);\n        setSelectedExamTypes(uniqueExamTypes); // Select all by default\n      } catch (error) {\n        console.error('Failed to fetch student results:', error);\n        setStudentResults([]);\n        setExamTypes([]);\n        setSelectedExamTypes([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (selectedStudent) {\n      fetchStudentResults();\n    }\n  }, [selectedStudent]);\n\n  // Helper function to safely get course name\n  const getCourseName = courseData => {\n    if (!courseData) return 'N/A';\n    try {\n      // If it's an object with a name property, extract the name\n      if (typeof courseData === 'object' && courseData !== null && 'name' in courseData) {\n        return courseData.name || 'N/A';\n      }\n\n      // If it's an object with course_name property, extract the course_name\n      if (typeof courseData === 'object' && courseData !== null && 'course_name' in courseData) {\n        return courseData.course_name || 'N/A';\n      }\n\n      // If it's an object with title property\n      if (typeof courseData === 'object' && courseData !== null && 'title' in courseData) {\n        return courseData.title || 'N/A';\n      }\n\n      // If it's an object with code property\n      if (typeof courseData === 'object' && courseData !== null && 'code' in courseData) {\n        return courseData.code || 'N/A';\n      }\n\n      // If it's an object with subject property\n      if (typeof courseData === 'object' && courseData !== null && 'subject' in courseData) {\n        return courseData.subject || 'N/A';\n      }\n\n      // If it's a string, return as is\n      if (typeof courseData === 'string') {\n        return courseData || 'N/A';\n      }\n\n      // Fallback - if it's an object but doesn't have recognizable properties, return N/A\n      if (typeof courseData === 'object' && courseData !== null) {\n        return 'N/A';\n      }\n\n      // Fallback\n      return 'N/A';\n    } catch (error) {\n      console.error('Error extracting course name:', error, courseData);\n      return 'N/A';\n    }\n  };\n\n  // Helper function to safely get course name from result object\n  const getCourseNameFromResult = result => {\n    if (!result) return 'N/A';\n    try {\n      // If result.course_name is an object (full course object), extract the name\n      if (result.course_name && typeof result.course_name === 'object' && result.course_name.name) {\n        return result.course_name.name;\n      }\n\n      // If result.course_name is a string, return it\n      if (typeof result.course_name === 'string') {\n        return result.course_name;\n      }\n\n      // If result has a course property that's an object\n      if (result.course && typeof result.course === 'object' && result.course.name) {\n        return result.course.name;\n      }\n\n      // If result has a course property that's a string\n      if (typeof result.course === 'string') {\n        return result.course;\n      }\n\n      // If result has a course property that's an object with course_name\n      if (result.course && typeof result.course === 'object' && result.course.course_name) {\n        return result.course.course_name;\n      }\n\n      // If result has a course property that's an object with other properties\n      if (result.course && typeof result.course === 'object') {\n        // Try to find any string property that might be the course name\n        const courseObj = result.course;\n        if (courseObj.title) return courseObj.title;\n        if (courseObj.code) return courseObj.code;\n        if (courseObj.subject) return courseObj.subject;\n        if (courseObj.id) return `Course ${courseObj.id}`;\n      }\n\n      // Additional checks for nested course info in result\n      if (result.courseInfo && typeof result.courseInfo === 'object') {\n        if (result.courseInfo.name) return result.courseInfo.name;\n        if (result.courseInfo.title) return result.courseInfo.title;\n        if (result.courseInfo.course_name) return result.courseInfo.course_name;\n      }\n\n      // Fallback to getCourseName function\n      return getCourseName(result.course_name);\n    } catch (error) {\n      console.error('Error extracting course name from result:', error, result);\n      return 'N/A';\n    }\n  };\n\n  // Helper function to safely get department name\n  const getDepartmentName = departmentData => {\n    if (!departmentData) return 'N/A';\n    try {\n      // If it's an object with a name property, extract the name\n      if (typeof departmentData === 'object' && departmentData !== null && 'name' in departmentData) {\n        return departmentData.name || 'N/A';\n      }\n\n      // If it's an object with department_name property\n      if (typeof departmentData === 'object' && departmentData !== null && 'department_name' in departmentData) {\n        return departmentData.department_name || 'N/A';\n      }\n\n      // If it's an object with title property\n      if (typeof departmentData === 'object' && departmentData !== null && 'title' in departmentData) {\n        return departmentData.title || 'N/A';\n      }\n\n      // If it's an object with code property\n      if (typeof departmentData === 'object' && departmentData !== null && 'code' in departmentData) {\n        return departmentData.code || 'N/A';\n      }\n\n      // If it's a string, return as is\n      if (typeof departmentData === 'string') {\n        return departmentData || 'N/A';\n      }\n\n      // If it's an object with other properties, try to find a suitable name\n      if (typeof departmentData === 'object' && departmentData !== null) {\n        if (departmentData.id) return `Department ${departmentData.id}`;\n      }\n      return 'N/A';\n    } catch (error) {\n      console.error('Error extracting department name:', error, departmentData);\n      return 'N/A';\n    }\n  };\n\n  // Helper function to safely get semester name\n  const getSemesterName = semesterData => {\n    if (!semesterData) return 'N/A';\n    try {\n      // If it's an object with a name property, extract the name\n      if (typeof semesterData === 'object' && semesterData !== null && 'name' in semesterData) {\n        return semesterData.name || 'N/A';\n      }\n\n      // If it's an object with semester_name property\n      if (typeof semesterData === 'object' && semesterData !== null && 'semester_name' in semesterData) {\n        return semesterData.semester_name || 'N/A';\n      }\n\n      // If it's an object with title property\n      if (typeof semesterData === 'object' && semesterData !== null && 'title' in semesterData) {\n        return semesterData.title || 'N/A';\n      }\n\n      // If it's an object with code property\n      if (typeof semesterData === 'object' && semesterData !== null && 'code' in semesterData) {\n        return semesterData.code || 'N/A';\n      }\n\n      // If it's an object with semester_code property\n      if (typeof semesterData === 'object' && semesterData !== null && 'semester_code' in semesterData) {\n        return semesterData.semester_code || 'N/A';\n      }\n\n      // If it's a string, return as is\n      if (typeof semesterData === 'string') {\n        return semesterData || 'N/A';\n      }\n\n      // If it's an object with other properties, try to find a suitable name\n      if (typeof semesterData === 'object' && semesterData !== null) {\n        if (semesterData.id) return `Semester ${semesterData.id}`;\n      }\n      return 'N/A';\n    } catch (error) {\n      console.error('Error extracting semester name:', error, semesterData);\n      return 'N/A';\n    }\n  };\n\n  // Helper function to safely get student name\n  const getStudentName = studentData => {\n    if (!studentData) return 'N/A';\n    try {\n      // If it's an object with user property containing first_name and last_name\n      if (typeof studentData === 'object' && studentData !== null && studentData.user) {\n        const user = studentData.user;\n        const firstName = user.first_name || '';\n        const lastName = user.last_name || '';\n        return `${firstName} ${lastName}`.trim() || 'N/A';\n      }\n\n      // If it's an object with name property\n      if (typeof studentData === 'object' && studentData !== null && 'name' in studentData) {\n        return studentData.name || 'N/A';\n      }\n\n      // If it's an object with student_name property\n      if (typeof studentData === 'object' && studentData !== null && 'student_name' in studentData) {\n        return studentData.student_name || 'N/A';\n      }\n\n      // If it's an object with first_name and last_name properties\n      if (typeof studentData === 'object' && studentData !== null && 'first_name' in studentData && 'last_name' in studentData) {\n        return `${studentData.first_name} ${studentData.last_name}`.trim() || 'N/A';\n      }\n\n      // If it's an object with full_name property\n      if (typeof studentData === 'object' && studentData !== null && 'full_name' in studentData) {\n        return studentData.full_name || 'N/A';\n      }\n\n      // If it's a string, return as is\n      if (typeof studentData === 'string') {\n        return studentData || 'N/A';\n      }\n\n      // If it's an object with other properties, try to find a suitable name\n      if (typeof studentData === 'object' && studentData !== null) {\n        if (studentData.student_id) return `Student ${studentData.student_id}`;\n      }\n      return 'N/A';\n    } catch (error) {\n      console.error('Error extracting student name:', error, studentData);\n      return 'N/A';\n    }\n  };\n\n  // Generate PDF Report Card\n  const generateReportCard = useCallback(() => {\n    var _selectedStudentData$, _selectedStudentData$2, _departments$find;\n    if (!selectedStudent || !Array.isArray(studentResults) || studentResults.length === 0) return;\n    const doc = new jsPDF();\n    const selectedStudentData = students.find(s => s.id === selectedStudent);\n\n    // Header\n    doc.setFontSize(20);\n    doc.text('FGPG University', 105, 20, {\n      align: 'center'\n    });\n    doc.setFontSize(16);\n    doc.text('Student Report Card', 105, 30, {\n      align: 'center'\n    });\n\n    // Student Information\n    doc.setFontSize(12);\n    doc.text(`Student Name: ${selectedStudentData === null || selectedStudentData === void 0 ? void 0 : (_selectedStudentData$ = selectedStudentData.user) === null || _selectedStudentData$ === void 0 ? void 0 : _selectedStudentData$.first_name} ${selectedStudentData === null || selectedStudentData === void 0 ? void 0 : (_selectedStudentData$2 = selectedStudentData.user) === null || _selectedStudentData$2 === void 0 ? void 0 : _selectedStudentData$2.last_name}`, 20, 50);\n    doc.text(`Student ID: ${selectedStudentData === null || selectedStudentData === void 0 ? void 0 : selectedStudentData.student_id}`, 20, 60);\n    doc.text(`Department: ${(_departments$find = departments.find(d => d.id === selectedDepartment)) === null || _departments$find === void 0 ? void 0 : _departments$find.name}`, 20, 70);\n    doc.text(`Semester: ${selectedStudentData === null || selectedStudentData === void 0 ? void 0 : selectedStudentData.semester}`, 20, 80);\n\n    // Results Table\n    let yPosition = 100;\n    doc.setFontSize(14);\n    doc.text('Academic Results', 20, yPosition);\n    yPosition += 10;\n\n    // Table headers\n    doc.setFontSize(10);\n    doc.text('Course', 20, yPosition);\n    doc.text('Grade', 120, yPosition);\n    doc.text('GPA', 160, yPosition);\n    yPosition += 5;\n\n    // Draw line\n    doc.line(20, yPosition, 190, yPosition);\n    yPosition += 10;\n\n    // Results data\n    studentResults.forEach(result => {\n      var _result$gpa;\n      doc.text(getCourseNameFromResult(result), 20, yPosition);\n      doc.text(result.grade || 'N/A', 120, yPosition);\n      doc.text(((_result$gpa = result.gpa) === null || _result$gpa === void 0 ? void 0 : _result$gpa.toString()) || 'N/A', 160, yPosition);\n      yPosition += 10;\n    });\n\n    // Footer\n    yPosition += 20;\n    doc.setFontSize(8);\n    doc.text('Generated on: ' + new Date().toLocaleDateString(), 20, yPosition);\n    doc.text('FGPG University Management System', 20, yPosition + 10);\n\n    // Save the PDF\n    doc.save(`report_card_${selectedStudentData === null || selectedStudentData === void 0 ? void 0 : selectedStudentData.student_id}.pdf`);\n  }, [selectedStudent, studentResults, students, departments, selectedDepartment]);\n\n  // Navigation tabs\n  const tabs = useMemo(() => {\n    return [{\n      id: 'dashboard',\n      label: 'Dashboard',\n      icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'\n    }, {\n      id: 'students',\n      label: 'Students',\n      icon: 'M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z'\n    }, {\n      id: 'instructors',\n      label: 'Instructors',\n      icon: 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z'\n    }, {\n      id: 'departments',\n      label: 'Departments',\n      icon: 'M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4'\n    }, {\n      id: 'courses',\n      label: 'Courses',\n      icon: 'M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253'\n    }, {\n      id: 'results',\n      label: 'Results',\n      icon: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01'\n    }, {\n      id: 'events',\n      label: 'Events',\n      icon: 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z'\n    }, {\n      id: 'messaging',\n      label: 'Messaging',\n      icon: 'M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z'\n    }, {\n      id: 'scholarships',\n      label: 'Scholarships',\n      icon: 'M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z'\n    }];\n  }, []);\n\n  // Render navigation tabs\n  const renderTabs = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-gradient-to-b from-blue-800 to-indigo-900 text-white p-4 space-y-2 min-h-screen shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-16 w-16 rounded-full bg-white mx-auto mb-2 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-10 w-10 text-indigo-700\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: \"FGPG Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-indigo-200\",\n          children: \"University Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-1\",\n          children: tabs.map(tab => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab(tab.id),\n              className: `w-full flex items-center px-4 py-2 rounded-lg transition-colors ${activeTab === tab.id ? 'bg-indigo-700 text-white' : 'text-indigo-100 hover:bg-indigo-700'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-3\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: tab.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: tab.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this)\n          }, tab.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-4 right-4 text-center text-xs text-indigo-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"University Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Version 1.0.0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render Results Tab\n  const renderResultsTab = () => {\n    const selectedStudentData = students.find(s => s.id === selectedStudent);\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        x: 20\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      exit: {\n        opacity: 0,\n        x: -20\n      },\n      transition: {\n        duration: 0.3\n      },\n      className: \"space-y-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-900 mb-6\",\n          children: \"Student Results Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Select Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedDepartment || '',\n              onChange: e => setSelectedDepartment(Number(e.target.value) || null),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a department...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: dept.id,\n                children: getDepartmentName(dept)\n              }, dept.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Select Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedSemester || '',\n              onChange: e => setSelectedSemester(Number(e.target.value) || null),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a semester...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 17\n              }, this), semesters.map(sem => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sem.id,\n                children: getSemesterName(sem)\n              }, sem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Select Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedStudent || '',\n              onChange: e => setSelectedStudent(Number(e.target.value) || null),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a student...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 17\n              }, this), students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: student.id,\n                children: getStudentName(student)\n              }, student.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Select Exam Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: examTypes.map(examType => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedExamTypes.includes(examType),\n                onChange: () => {\n                  if (selectedExamTypes.includes(examType)) {\n                    setSelectedExamTypes(selectedExamTypes.filter(et => et !== examType));\n                  } else {\n                    setSelectedExamTypes([...selectedExamTypes, examType]);\n                  }\n                },\n                className: \"form-checkbox h-4 w-4 text-indigo-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700\",\n                children: examType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this)]\n            }, examType, true, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mt-2\",\n            children: \"Loading results...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 13\n        }, this) : studentResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full divide-y divide-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Course\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 21\n                }, this), selectedExamTypes.map(examType => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: [examType, \" Marks\"]\n                }, examType, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 23\n                }, this)), selectedExamTypes.map(examType => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: [examType, \" GPA\"]\n                }, `${examType}-gpa`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: studentResults.map((result, index) => {\n                // Filter marks and GPA by selected exam types\n                const marksByExamType = selectedExamTypes.map(examType => {\n                  const examResult = result.exams[examType];\n                  return examResult ? examResult.marks || 'N/A' : 'N/A';\n                });\n                const gpaByExamType = selectedExamTypes.map(examType => {\n                  var _examResult$gpa;\n                  const examResult = result.exams[examType];\n                  return examResult ? ((_examResult$gpa = examResult.gpa) === null || _examResult$gpa === void 0 ? void 0 : _examResult$gpa.toString()) || 'N/A' : 'N/A';\n                });\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"hover:bg-gray-50\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n                    children: result.normalizedCourseName || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 857,\n                    columnNumber: 25\n                  }, this), marksByExamType.map((marks, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                    children: marks\n                  }, `marks-${i}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 27\n                  }, this)), gpaByExamType.map((gpa, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                    children: gpa\n                  }, `gpa-${i}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 27\n                  }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${result.grade === 'A' || result.grade === 'A-' || result.grade === 'B+' || result.grade === 'B' ? 'bg-green-100 text-green-800' : result.grade === 'C' || result.grade === 'C-' || result.grade === 'D' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`,\n                      children: result.grade ? 'Completed' : 'Pending'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 871,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8 text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"mx-auto h-12 w-12 text-gray-400\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            children: \"No results found for this student.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this)\n    }, \"results\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [renderTabs(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6 bg-gray-50 min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            x: 20\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          exit: {\n            opacity: 0,\n            x: -20\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: /*#__PURE__*/_jsxDEV(SystemHealthWidget, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 1\n          }, this)\n        }, \"dashboard\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(StudentManagement, {\n          activeTab: activeTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 40\n        }, this), activeTab === 'instructors' && /*#__PURE__*/_jsxDEV(TeacherManagement, {\n          activeTab: activeTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 43\n        }, this), activeTab === 'departments' && /*#__PURE__*/_jsxDEV(DepartmentManagement, {\n          activeTab: activeTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 43\n        }, this), activeTab === 'courses' && /*#__PURE__*/_jsxDEV(CourseManagement, {\n          activeTab: activeTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 39\n        }, this), activeTab === 'results' && renderResultsTab(), activeTab === 'events' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Events content coming soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 38\n        }, this), activeTab === 'messaging' && /*#__PURE__*/_jsxDEV(MessagingSystem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 41\n        }, this), activeTab === 'scholarships' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Scholarships content coming soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 914,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"rwwDEXpX+b4WmzXJnWjzrhOYAfA=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["useAuth","useState","useEffect","useMemo","useCallback","motion","AnimatePresence","departmentService","courseService","studentService","instructorService","academicsService","StudentManagement","DepartmentManagement","CourseManagement","TeacherManagement","MessagingSystem","SystemHealthWidget","jsPDF","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","AdminDashboard","_s","currentUser","logout","activeTab","setActiveTab","departments","setDepartments","semesters","setSemesters","students","setStudents","selectedDepartment","setSelectedDepartment","selectedSemester","setSelectedSemester","selectedStudent","setSelectedStudent","studentResults","setStudentResults","loading","setLoading","examTypes","setExamTypes","selectedExamTypes","setSelectedExamTypes","header","document","querySelector","classList","add","adminData","setAdminData","users","stats","totalUsers","activeUsers","totalDepartments","totalCourses","totalStudents","totalStaff","fetchDashboardData","studentsRes","departmentsRes","coursesRes","instructorsRes","Promise","all","getAllStudents","getAllDepartments","getAllCourses","getAllInstructors","data","length","Math","floor","error","console","fetchDepartments","response","getDepartments","fetchSemesters","getSemestersByDepartment","fetchStudents","department","semester","normalizeStudentResults","results","groupedResults","forEach","result","_result$course","_result$course2","_result$course3","courseKey","course","name","course_name","title","examType","exam_type","normalizedResults","Object","entries","map","exams","departmentName","gpaValue","firstExam","values","department_name","percentage","undefined","toString","gpa","grade_point","grade_point_value","gpaValues","exam","Number","filter","val","avgGpa","reduce","acc","toFixed","normalizedCourseName","normalizedDepartmentName","normalizedGPA","fetchStudentResults","getStudentResults","log","rawResults","Array","isArray","warn","uniqueExamTypes","from","Set","r","Boolean","getCourseName","courseData","code","subject","getCourseNameFromResult","courseObj","id","courseInfo","getDepartmentName","departmentData","getSemesterName","semesterData","semester_name","semester_code","getStudentName","studentData","user","firstName","first_name","lastName","last_name","trim","student_name","full_name","student_id","generateReportCard","_selectedStudentData$","_selectedStudentData$2","_departments$find","doc","selectedStudentData","find","s","setFontSize","text","align","d","yPosition","line","_result$gpa","grade","Date","toLocaleDateString","save","tabs","label","icon","renderTabs","className","children","xmlns","viewBox","fill","fileName","_jsxFileName","lineNumber","columnNumber","tab","onClick","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderResultsTab","div","initial","opacity","x","animate","exit","transition","duration","value","onChange","e","target","dept","sem","student","type","checked","includes","et","index","marksByExamType","examResult","marks","gpaByExamType","_examResult$gpa","i","_c","$RefreshReg$"],"sources":["C:/UMI/Frontend/src/pages/AdminDashboard.tsx"],"sourcesContent":["\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { messagingService, departmentService, courseService, studentService } from '../api/apiService';\r\nimport { instructorService } from '../api/studentInstructorService';\r\nimport { academicsService } from '../api/academicsService_enhanced';\r\nimport StudentManagement from '../components/pages/StudentManagement';\r\nimport DepartmentManagement from '../components/pages/DepartmentManagement';\r\nimport CourseManagement from '../components/pages/CourseManagement';\r\nimport TeacherManagement from '../components/pages/TeacherManagement';\r\nimport MessagingSystem from '../components/messaging/MessagingSystem';\r\nimport SystemHealthWidget from '../components/dashboard/SystemHealthWidget';\r\nimport { jsPDF } from 'jspdf';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// TypeScript interfaces for data structures\r\n\r\ninterface Department {\r\n  id: number;\r\n  name?: string;\r\n  department_name?: string;\r\n  title?: string;\r\n  code?: string;\r\n}\r\n\r\ninterface Semester {\r\n  id: number;\r\n  name?: string;\r\n  semester_name?: string;\r\n  title?: string;\r\n  code?: string;\r\n  semester_code?: string;\r\n}\r\n\r\ninterface User {\r\n  first_name?: string;\r\n  last_name?: string;\r\n}\r\n\r\ninterface Student {\r\n  id: number;\r\n  user?: User;\r\n  student_id?: string | number;\r\n  name?: string;\r\n  student_name?: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  full_name?: string;\r\n  semester?: string;\r\n}\r\n\r\ninterface ExamResult {\r\n  exam_type?: string;\r\n  marks?: number | string;\r\n  gpa?: number | string;\r\n  percentage?: number | string;\r\n  grade_point?: number | string;\r\n  grade_point_value?: number | string;\r\n  grade?: string;\r\n  department?: Department | string | null;\r\n  course?: string | { name?: string; course_name?: string; title?: string; code?: string; subject?: string; id?: number };\r\n}\r\n\r\ninterface StudentResult {\r\n  course: string;\r\n  exams: { [examType: string]: ExamResult };\r\n  normalizedCourseName: string;\r\n  normalizedDepartmentName: string;\r\n  normalizedGPA: string;\r\n  grade?: string;\r\n  gpa?: string | number;\r\n}\r\n\r\nconst AdminDashboard = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState<string>('dashboard');\r\n\r\n  // Results tab state\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [semesters, setSemesters] = useState<Semester[]>([]);\r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<number | null>(null);\r\n  const [selectedSemester, setSelectedSemester] = useState<number | null>(null);\r\n  const [selectedStudent, setSelectedStudent] = useState<number | null>(null);\r\n  const [studentResults, setStudentResults] = useState<StudentResult[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // New state for exam types and selected exam types\r\n  const [examTypes, setExamTypes] = useState<string[]>([]);\r\n  const [selectedExamTypes, setSelectedExamTypes] = useState<string[]>([]);\r\n\r\n  // Add header animation effect\r\n  useEffect(() => {\r\n    const header = document.querySelector('.admin-header');\r\n    if (header) {\r\n      header.classList.add('animate-fadeIn');\r\n    }\r\n  }, []);\r\n\r\n  // Admin data state\r\n  const [adminData, setAdminData] = useState({\r\n    users: [] as any[],\r\n    departments: [] as any[],\r\n    stats: {\r\n      totalUsers: 1200,\r\n      activeUsers: 850,\r\n      totalDepartments: 25,\r\n      totalCourses: 40,\r\n      totalStudents: 1000,\r\n      totalStaff: 200,\r\n    },\r\n  });\r\n\r\n  // Fetch real data for dashboard stats\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        const [studentsRes, departmentsRes, coursesRes, instructorsRes] = await Promise.all([\r\n          studentService.getAllStudents(),\r\n          departmentService.getAllDepartments(),\r\n          courseService.getAllCourses(),\r\n          instructorService.getAllInstructors(),\r\n        ]);\r\n\r\n        const totalUsers = studentsRes.data.length + instructorsRes.data.length;\r\n        const activeUsers = Math.floor(totalUsers * 0.7); // Assuming 70% are active\r\n\r\n        setAdminData({\r\n          users: [...studentsRes.data, ...instructorsRes.data],\r\n          departments: departmentsRes.data,\r\n          stats: {\r\n            totalUsers,\r\n            activeUsers,\r\n            totalDepartments: departmentsRes.data.length,\r\n            totalCourses: coursesRes.data.length,\r\n            totalStudents: studentsRes.data.length,\r\n            totalStaff: instructorsRes.data.length,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to fetch admin dashboard data:', error);\r\n        // Keep default values if fetch fails\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  // Fetch departments for results tab\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await academicsService.getDepartments();\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch departments:', error);\r\n      }\r\n    };\r\n\r\n    if (activeTab === 'results') {\r\n      fetchDepartments();\r\n    }\r\n  }, [activeTab]);\r\n\r\n  // Fetch semesters when department is selected\r\n  useEffect(() => {\r\n    const fetchSemesters = async () => {\r\n      if (!selectedDepartment) {\r\n        setSemesters([]);\r\n        setSelectedSemester(null);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await academicsService.getSemestersByDepartment(selectedDepartment);\r\n        setSemesters(response.data);\r\n        setSelectedSemester(null); // Reset semester selection\r\n        setSelectedStudent(null); // Reset student selection\r\n        setStudentResults([]);\r\n      } catch (error) {\r\n        console.error('Failed to fetch semesters:', error);\r\n        setSemesters([]);\r\n      }\r\n    };\r\n\r\n    if (selectedDepartment) {\r\n      fetchSemesters();\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  // Fetch students when semester is selected\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      if (!selectedDepartment || !selectedSemester) {\r\n        setStudents([]);\r\n        setSelectedStudent(null);\r\n        setStudentResults([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        // Use server-side filtering instead of client-side filtering\r\n        const response = await studentService.getAllStudents({\r\n          department: selectedDepartment,\r\n          semester: selectedSemester\r\n        });\r\n        setStudents(response.data);\r\n        setSelectedStudent(null); // Reset student selection\r\n        setStudentResults([]);\r\n      } catch (error) {\r\n        console.error('Failed to fetch students:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (selectedDepartment && selectedSemester) {\r\n      fetchStudents();\r\n    }\r\n  }, [selectedDepartment, selectedSemester]);\r\n\r\n  // Normalize student results to ensure consistent course and GPA fields\r\n  const normalizeStudentResults = (results: any[]): any[] => {\r\n    // Group results by course and exam_type to handle multiple exam types per course\r\n    const groupedResults: { [key: string]: any } = {};\r\n\r\n    results.forEach((result) => {\r\n      const courseKey = typeof result.course === 'string' ? result.course : result.course?.name || result.course?.course_name || result.course?.title || 'N/A';\r\n      const examType = result.exam_type || 'default';\r\n\r\n      if (!groupedResults[courseKey]) {\r\n        groupedResults[courseKey] = {};\r\n      }\r\n      groupedResults[courseKey][examType] = result;\r\n    });\r\n\r\n    // Flatten grouped results into an array with combined exam types\r\n    const normalizedResults = Object.entries(groupedResults).map(([courseKey, exams]) => {\r\n      let departmentName = 'N/A';\r\n      let gpaValue = 'N/A';\r\n\r\n      // Use the first exam's department info as representative\r\n      const firstExam = Object.values(exams)[0] as ExamResult | undefined;\r\n      if (firstExam) {\r\n        if (firstExam.department) {\r\n          if (typeof firstExam.department === 'object' && firstExam.department !== null) {\r\n            departmentName = firstExam.department.name || firstExam.department.department_name || 'N/A';\r\n          } else if (typeof firstExam.department === 'string') {\r\n            departmentName = firstExam.department;\r\n          }\r\n        }\r\n\r\n        // Extract GPA from percentage or other fields safely\r\n        if (firstExam.percentage !== undefined && firstExam.percentage !== null) {\r\n          gpaValue = firstExam.percentage.toString();\r\n        } else if (firstExam.gpa !== undefined && firstExam.gpa !== null) {\r\n          gpaValue = firstExam.gpa.toString();\r\n        } else if (firstExam.grade_point !== undefined && firstExam.grade_point !== null) {\r\n          gpaValue = firstExam.grade_point.toString();\r\n        } else if (firstExam.grade_point_value !== undefined && firstExam.grade_point_value !== null) {\r\n          gpaValue = firstExam.grade_point_value.toString();\r\n        }\r\n      }\r\n\r\n      // Calculate combined GPA for all exam types if needed\r\n      const gpaValues = Object.values(exams)\r\n        .map((exam: any) => {\r\n          if (exam.gpa !== undefined && exam.gpa !== null) return Number(exam.gpa);\r\n          if (exam.percentage !== undefined && exam.percentage !== null) return Number(exam.percentage);\r\n          if (exam.grade_point !== undefined && exam.grade_point !== null) return Number(exam.grade_point);\r\n          if (exam.grade_point_value !== undefined && exam.grade_point_value !== null) return Number(exam.grade_point_value);\r\n          return null;\r\n        })\r\n        .filter((val): val is number => val !== null);\r\n\r\n      if (gpaValues.length > 0) {\r\n        const avgGpa = gpaValues.reduce((acc: number, val: number) => acc + val, 0) / gpaValues.length;\r\n        gpaValue = avgGpa.toFixed(2);\r\n      }\r\n\r\n      return {\r\n        course: courseKey,\r\n        exams,\r\n        normalizedCourseName: courseKey,\r\n        normalizedDepartmentName: departmentName,\r\n        normalizedGPA: gpaValue,\r\n      };\r\n    });\r\n\r\n    return normalizedResults;\r\n  };\r\n\r\n  // Fetch student results when student is selected\r\n  useEffect(() => {\r\n    const fetchStudentResults = async () => {\r\n      if (!selectedStudent) return;\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await academicsService.getStudentResults(selectedStudent);\r\n        console.log('Raw student results response:', response.data);\r\n        let rawResults: any[] = [];\r\n\r\n        // Extract results array from response.data object\r\n        if (response.data && typeof response.data === 'object' && Array.isArray(response.data.results)) {\r\n          rawResults = response.data.results;\r\n        } else if (Array.isArray(response.data)) {\r\n          rawResults = response.data;\r\n        } else {\r\n          rawResults = [];\r\n          console.warn('Unexpected student results format:', response.data);\r\n        }\r\n\r\n        const normalizedResults = normalizeStudentResults(rawResults);\r\n        setStudentResults(normalizedResults);\r\n\r\n        // Extract unique exam types from results\r\n        const uniqueExamTypes = Array.from(new Set(rawResults.map(r => r.exam_type).filter(Boolean)));\r\n        setExamTypes(uniqueExamTypes);\r\n        setSelectedExamTypes(uniqueExamTypes); // Select all by default\r\n      } catch (error) {\r\n        console.error('Failed to fetch student results:', error);\r\n        setStudentResults([]);\r\n        setExamTypes([]);\r\n        setSelectedExamTypes([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (selectedStudent) {\r\n      fetchStudentResults();\r\n    }\r\n  }, [selectedStudent]);\r\n\r\n  // Helper function to safely get course name\r\n  const getCourseName = (courseData: any): string => {\r\n    if (!courseData) return 'N/A';\r\n\r\n    try {\r\n      // If it's an object with a name property, extract the name\r\n      if (typeof courseData === 'object' && courseData !== null && 'name' in courseData) {\r\n        return courseData.name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with course_name property, extract the course_name\r\n      if (typeof courseData === 'object' && courseData !== null && 'course_name' in courseData) {\r\n        return courseData.course_name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with title property\r\n      if (typeof courseData === 'object' && courseData !== null && 'title' in courseData) {\r\n        return courseData.title || 'N/A';\r\n      }\r\n\r\n      // If it's an object with code property\r\n      if (typeof courseData === 'object' && courseData !== null && 'code' in courseData) {\r\n        return courseData.code || 'N/A';\r\n      }\r\n\r\n      // If it's an object with subject property\r\n      if (typeof courseData === 'object' && courseData !== null && 'subject' in courseData) {\r\n        return courseData.subject || 'N/A';\r\n      }\r\n\r\n      // If it's a string, return as is\r\n      if (typeof courseData === 'string') {\r\n        return courseData || 'N/A';\r\n      }\r\n\r\n      // Fallback - if it's an object but doesn't have recognizable properties, return N/A\r\n      if (typeof courseData === 'object' && courseData !== null) {\r\n        return 'N/A';\r\n      }\r\n\r\n      // Fallback\r\n      return 'N/A';\r\n    } catch (error) {\r\n      console.error('Error extracting course name:', error, courseData);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  // Helper function to safely get course name from result object\r\n  const getCourseNameFromResult = (result: any): string => {\r\n    if (!result) return 'N/A';\r\n\r\n    try {\r\n      // If result.course_name is an object (full course object), extract the name\r\n      if (result.course_name && typeof result.course_name === 'object' && result.course_name.name) {\r\n        return result.course_name.name;\r\n      }\r\n\r\n      // If result.course_name is a string, return it\r\n      if (typeof result.course_name === 'string') {\r\n        return result.course_name;\r\n      }\r\n\r\n      // If result has a course property that's an object\r\n      if (result.course && typeof result.course === 'object' && result.course.name) {\r\n        return result.course.name;\r\n      }\r\n\r\n      // If result has a course property that's a string\r\n      if (typeof result.course === 'string') {\r\n        return result.course;\r\n      }\r\n\r\n      // If result has a course property that's an object with course_name\r\n      if (result.course && typeof result.course === 'object' && result.course.course_name) {\r\n        return result.course.course_name;\r\n      }\r\n\r\n      // If result has a course property that's an object with other properties\r\n      if (result.course && typeof result.course === 'object') {\r\n        // Try to find any string property that might be the course name\r\n        const courseObj = result.course;\r\n        if (courseObj.title) return courseObj.title;\r\n        if (courseObj.code) return courseObj.code;\r\n        if (courseObj.subject) return courseObj.subject;\r\n        if (courseObj.id) return `Course ${courseObj.id}`;\r\n      }\r\n\r\n      // Additional checks for nested course info in result\r\n      if (result.courseInfo && typeof result.courseInfo === 'object') {\r\n        if (result.courseInfo.name) return result.courseInfo.name;\r\n        if (result.courseInfo.title) return result.courseInfo.title;\r\n        if (result.courseInfo.course_name) return result.courseInfo.course_name;\r\n      }\r\n\r\n      // Fallback to getCourseName function\r\n      return getCourseName(result.course_name);\r\n    } catch (error) {\r\n      console.error('Error extracting course name from result:', error, result);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  // Helper function to safely get department name\r\n  const getDepartmentName = (departmentData: any): string => {\r\n    if (!departmentData) return 'N/A';\r\n\r\n    try {\r\n      // If it's an object with a name property, extract the name\r\n      if (typeof departmentData === 'object' && departmentData !== null && 'name' in departmentData) {\r\n        return departmentData.name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with department_name property\r\n      if (typeof departmentData === 'object' && departmentData !== null && 'department_name' in departmentData) {\r\n        return departmentData.department_name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with title property\r\n      if (typeof departmentData === 'object' && departmentData !== null && 'title' in departmentData) {\r\n        return departmentData.title || 'N/A';\r\n      }\r\n\r\n      // If it's an object with code property\r\n      if (typeof departmentData === 'object' && departmentData !== null && 'code' in departmentData) {\r\n        return departmentData.code || 'N/A';\r\n      }\r\n\r\n      // If it's a string, return as is\r\n      if (typeof departmentData === 'string') {\r\n        return departmentData || 'N/A';\r\n      }\r\n\r\n      // If it's an object with other properties, try to find a suitable name\r\n      if (typeof departmentData === 'object' && departmentData !== null) {\r\n        if (departmentData.id) return `Department ${departmentData.id}`;\r\n      }\r\n\r\n      return 'N/A';\r\n    } catch (error) {\r\n      console.error('Error extracting department name:', error, departmentData);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  // Helper function to safely get semester name\r\n  const getSemesterName = (semesterData: any): string => {\r\n    if (!semesterData) return 'N/A';\r\n\r\n    try {\r\n      // If it's an object with a name property, extract the name\r\n      if (typeof semesterData === 'object' && semesterData !== null && 'name' in semesterData) {\r\n        return semesterData.name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with semester_name property\r\n      if (typeof semesterData === 'object' && semesterData !== null && 'semester_name' in semesterData) {\r\n        return semesterData.semester_name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with title property\r\n      if (typeof semesterData === 'object' && semesterData !== null && 'title' in semesterData) {\r\n        return semesterData.title || 'N/A';\r\n      }\r\n\r\n      // If it's an object with code property\r\n      if (typeof semesterData === 'object' && semesterData !== null && 'code' in semesterData) {\r\n        return semesterData.code || 'N/A';\r\n      }\r\n\r\n      // If it's an object with semester_code property\r\n      if (typeof semesterData === 'object' && semesterData !== null && 'semester_code' in semesterData) {\r\n        return semesterData.semester_code || 'N/A';\r\n      }\r\n\r\n      // If it's a string, return as is\r\n      if (typeof semesterData === 'string') {\r\n        return semesterData || 'N/A';\r\n      }\r\n\r\n      // If it's an object with other properties, try to find a suitable name\r\n      if (typeof semesterData === 'object' && semesterData !== null) {\r\n        if (semesterData.id) return `Semester ${semesterData.id}`;\r\n      }\r\n\r\n      return 'N/A';\r\n    } catch (error) {\r\n      console.error('Error extracting semester name:', error, semesterData);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  // Helper function to safely get student name\r\n  const getStudentName = (studentData: any): string => {\r\n    if (!studentData) return 'N/A';\r\n\r\n    try {\r\n      // If it's an object with user property containing first_name and last_name\r\n      if (typeof studentData === 'object' && studentData !== null && studentData.user) {\r\n        const user = studentData.user;\r\n        const firstName = user.first_name || '';\r\n        const lastName = user.last_name || '';\r\n        return `${firstName} ${lastName}`.trim() || 'N/A';\r\n      }\r\n\r\n      // If it's an object with name property\r\n      if (typeof studentData === 'object' && studentData !== null && 'name' in studentData) {\r\n        return studentData.name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with student_name property\r\n      if (typeof studentData === 'object' && studentData !== null && 'student_name' in studentData) {\r\n        return studentData.student_name || 'N/A';\r\n      }\r\n\r\n      // If it's an object with first_name and last_name properties\r\n      if (typeof studentData === 'object' && studentData !== null && 'first_name' in studentData && 'last_name' in studentData) {\r\n        return `${studentData.first_name} ${studentData.last_name}`.trim() || 'N/A';\r\n      }\r\n\r\n      // If it's an object with full_name property\r\n      if (typeof studentData === 'object' && studentData !== null && 'full_name' in studentData) {\r\n        return studentData.full_name || 'N/A';\r\n      }\r\n\r\n      // If it's a string, return as is\r\n      if (typeof studentData === 'string') {\r\n        return studentData || 'N/A';\r\n      }\r\n\r\n      // If it's an object with other properties, try to find a suitable name\r\n      if (typeof studentData === 'object' && studentData !== null) {\r\n        if (studentData.student_id) return `Student ${studentData.student_id}`;\r\n      }\r\n\r\n      return 'N/A';\r\n    } catch (error) {\r\n      console.error('Error extracting student name:', error, studentData);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  // Generate PDF Report Card\r\n  const generateReportCard = useCallback(() => {\r\n    if (!selectedStudent || !Array.isArray(studentResults) || studentResults.length === 0) return;\r\n\r\n    const doc = new jsPDF();\r\n    const selectedStudentData = students.find(s => s.id === selectedStudent);\r\n\r\n    // Header\r\n    doc.setFontSize(20);\r\n    doc.text('FGPG University', 105, 20, { align: 'center' });\r\n    doc.setFontSize(16);\r\n    doc.text('Student Report Card', 105, 30, { align: 'center' });\r\n\r\n    // Student Information\r\n    doc.setFontSize(12);\r\n    doc.text(`Student Name: ${selectedStudentData?.user?.first_name} ${selectedStudentData?.user?.last_name}`, 20, 50);\r\n    doc.text(`Student ID: ${selectedStudentData?.student_id}`, 20, 60);\r\n    doc.text(`Department: ${departments.find(d => d.id === selectedDepartment)?.name}`, 20, 70);\r\n    doc.text(`Semester: ${selectedStudentData?.semester}`, 20, 80);\r\n\r\n    // Results Table\r\n    let yPosition = 100;\r\n    doc.setFontSize(14);\r\n    doc.text('Academic Results', 20, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Table headers\r\n    doc.setFontSize(10);\r\n    doc.text('Course', 20, yPosition);\r\n    doc.text('Grade', 120, yPosition);\r\n    doc.text('GPA', 160, yPosition);\r\n    yPosition += 5;\r\n\r\n    // Draw line\r\n    doc.line(20, yPosition, 190, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Results data\r\n    studentResults.forEach((result: any) => {\r\n      doc.text(getCourseNameFromResult(result), 20, yPosition);\r\n      doc.text(result.grade || 'N/A', 120, yPosition);\r\n      doc.text(result.gpa?.toString() || 'N/A', 160, yPosition);\r\n      yPosition += 10;\r\n    });\r\n\r\n    // Footer\r\n    yPosition += 20;\r\n    doc.setFontSize(8);\r\n    doc.text('Generated on: ' + new Date().toLocaleDateString(), 20, yPosition);\r\n    doc.text('FGPG University Management System', 20, yPosition + 10);\r\n\r\n    // Save the PDF\r\n    doc.save(`report_card_${selectedStudentData?.student_id}.pdf`);\r\n  }, [selectedStudent, studentResults, students, departments, selectedDepartment]);\r\n\r\n  // Navigation tabs\r\n  const tabs = useMemo(() => {\r\n    return [\r\n      { id: 'dashboard', label: 'Dashboard', icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6' },\r\n      { id: 'students', label: 'Students', icon: 'M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z' },\r\n      { id: 'instructors', label: 'Instructors', icon: 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z' },\r\n      { id: 'departments', label: 'Departments', icon: 'M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4' },\r\n      { id: 'courses', label: 'Courses', icon: 'M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253' },\r\n      { id: 'results', label: 'Results', icon: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01' },\r\n      { id: 'events', label: 'Events', icon: 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z' },\r\n      { id: 'messaging', label: 'Messaging', icon: 'M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z' },\r\n      { id: 'scholarships', label: 'Scholarships', icon: 'M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z' },\r\n    ];\r\n  }, []);\r\n\r\n  // Render navigation tabs\r\n  const renderTabs = () => {\r\n    return (\r\n      <div className=\"w-64 bg-gradient-to-b from-blue-800 to-indigo-900 text-white p-4 space-y-2 min-h-screen shadow-xl\">\r\n        <div className=\"mb-8 text-center\">\r\n          <div className=\"h-16 w-16 rounded-full bg-white mx-auto mb-2 flex items-center justify-center\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 text-indigo-700\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path d=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold\">FGPG Admin</h3>\r\n          <p className=\"text-xs text-indigo-200\">University Management</p>\r\n        </div>\r\n\r\n        <nav>\r\n          <ul className=\"space-y-1\">\r\n            {tabs.map((tab) => (\r\n              <li key={tab.id}>\r\n                <button\r\n                  onClick={() => setActiveTab(tab.id)}\r\n                  className={`w-full flex items-center px-4 py-2 rounded-lg transition-colors ${activeTab === tab.id ? 'bg-indigo-700 text-white' : 'text-indigo-100 hover:bg-indigo-700'}`}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={tab.icon} />\r\n                  </svg>\r\n                  <span>{tab.label}</span>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"absolute bottom-4 right-4 text-center text-xs text-indigo-300\">\r\n            <p>University Management</p>\r\n            <p>Version 1.0.0</p>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Render Results Tab\r\n  const renderResultsTab = () => {\r\n    const selectedStudentData = students.find(s => s.id === selectedStudent);\r\n\r\n    return (\r\n      <motion.div\r\n        key=\"results\"\r\n        initial={{ opacity: 0, x: 20 }}\r\n        animate={{ opacity: 1, x: 0 }}\r\n        exit={{ opacity: 0, x: -20 }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"space-y-6\"\r\n      >\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg border border-gray-100\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Student Results Management</h2>\r\n\r\n          {/* Selection Controls */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Select Department\r\n              </label>\r\n              <select\r\n                value={selectedDepartment || ''}\r\n                onChange={(e) => setSelectedDepartment(Number(e.target.value) || null)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"\">Choose a department...</option>\r\n                {departments.map((dept) => (\r\n                  <option key={dept.id} value={dept.id}>\r\n                    {getDepartmentName(dept)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Select Semester\r\n              </label>\r\n              <select\r\n                value={selectedSemester || ''}\r\n                onChange={(e) => setSelectedSemester(Number(e.target.value) || null)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"\">Choose a semester...</option>\r\n                {semesters.map((sem) => (\r\n                  <option key={sem.id} value={sem.id}>\r\n                    {getSemesterName(sem)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Select Student\r\n              </label>\r\n              <select\r\n                value={selectedStudent || ''}\r\n                onChange={(e) => setSelectedStudent(Number(e.target.value) || null)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n              >\r\n                <option value=\"\">Choose a student...</option>\r\n                {students.map((student) => (\r\n                  <option key={student.id} value={student.id}>\r\n                    {getStudentName(student)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Exam Type Selection */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select Exam Types</label>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {examTypes.map((examType) => (\r\n                <label key={examType} className=\"inline-flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedExamTypes.includes(examType)}\r\n                    onChange={() => {\r\n                      if (selectedExamTypes.includes(examType)) {\r\n                        setSelectedExamTypes(selectedExamTypes.filter((et) => et !== examType));\r\n                      } else {\r\n                        setSelectedExamTypes([...selectedExamTypes, examType]);\r\n                      }\r\n                    }}\r\n                    className=\"form-checkbox h-4 w-4 text-indigo-600\"\r\n                  />\r\n                  <span className=\"text-gray-700\">{examType}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"text-center py-8\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto\"></div>\r\n              <p className=\"text-gray-600 mt-2\">Loading results...</p>\r\n            </div>\r\n          ) : studentResults.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Course\r\n                    </th>\r\n                    {selectedExamTypes.map((examType) => (\r\n                      <th\r\n                        key={examType}\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                      >\r\n                        {examType} Marks\r\n                      </th>\r\n                    ))}\r\n                    {selectedExamTypes.map((examType) => (\r\n                      <th\r\n                        key={`${examType}-gpa`}\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                      >\r\n                        {examType} GPA\r\n                      </th>\r\n                    ))}\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Status\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {studentResults.map((result, index) => {\r\n                    // Filter marks and GPA by selected exam types\r\n                    const marksByExamType = selectedExamTypes.map((examType) => {\r\n                      const examResult = result.exams[examType];\r\n                      return examResult ? examResult.marks || 'N/A' : 'N/A';\r\n                    });\r\n                    const gpaByExamType = selectedExamTypes.map((examType) => {\r\n                      const examResult = result.exams[examType];\r\n                      return examResult ? examResult.gpa?.toString() || 'N/A' : 'N/A';\r\n                    });\r\n\r\n                    return (\r\n                      <tr key={index} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                          {result.normalizedCourseName || 'N/A'}\r\n                        </td>\r\n                        {marksByExamType.map((marks, i) => (\r\n                          <td key={`marks-${i}`} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {marks}\r\n                          </td>\r\n                        ))}\r\n                        {gpaByExamType.map((gpa, i) => (\r\n                          <td key={`gpa-${i}`} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {gpa}\r\n                          </td>\r\n                        ))}\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span\r\n                            className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                              result.grade === 'A' || result.grade === 'A-' || result.grade === 'B+' || result.grade === 'B'\r\n                                ? 'bg-green-100 text-green-800'\r\n                                : result.grade === 'C' || result.grade === 'C-' || result.grade === 'D'\r\n                                ? 'bg-yellow-100 text-yellow-800'\r\n                                : 'bg-red-100 text-red-800'\r\n                            }`}\r\n                          >\r\n                            {result.grade ? 'Completed' : 'Pending'}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-8 text-gray-500\">\r\n              <svg\r\n                className=\"mx-auto h-12 w-12 text-gray-400\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\r\n                />\r\n              </svg>\r\n              <p className=\"mt-2\">No results found for this student.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  // Main render\r\n  return (\r\n    <div className=\"flex\">\r\n      {renderTabs()}\r\n      <div className=\"flex-1 p-6 bg-gray-50 min-h-screen\">\r\n        <AnimatePresence>\r\n          {activeTab === 'dashboard' && (\r\n            <motion.div\r\n              key=\"dashboard\"\r\n              initial={{ opacity: 0, x: 20 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              exit={{ opacity: 0, x: -20 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              {/* SystemHealthWidget fetches its own data */}\r\n<SystemHealthWidget />\r\n            </motion.div>\r\n          )}\r\n          {activeTab === 'students' && <StudentManagement activeTab={activeTab} />}\r\n          {activeTab === 'instructors' && <TeacherManagement activeTab={activeTab} />}\r\n          {activeTab === 'departments' && <DepartmentManagement activeTab={activeTab} />}\r\n          {activeTab === 'courses' && <CourseManagement activeTab={activeTab} />}\r\n          {activeTab === 'results' && renderResultsTab()}\r\n          {activeTab === 'events' && <div>Events content coming soon...</div>}\r\n          {activeTab === 'messaging' && <MessagingSystem />}\r\n          {activeTab === 'scholarships' && <div>Scholarships content coming soon...</div>}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}