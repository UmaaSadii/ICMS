{"ast":null,"code":"export class StudentModel{constructor(){this.students=[];}async fetchStudents(departmentId,semesterId){// API call to fetch students\nconst response=await fetch(\"/api/students?department=\".concat(departmentId,\"&semester=\").concat(semesterId));this.students=await response.json();return this.students;}getStudents(){return this.students;}getStudentById(id){return this.students.find(student=>student.id===id);}}","map":{"version":3,"names":["StudentModel","constructor","students","fetchStudents","departmentId","semesterId","response","fetch","concat","json","getStudents","getStudentById","id","find","student"],"sources":["c:/UMI/Frontend/src/models/StudentModel.ts"],"sourcesContent":["export interface Student {\r\n  id: string;\r\n  student_id: string;\r\n  name: string;\r\n  roll_number: string;\r\n  email: string;\r\n  department: { name: string };\r\n  semester: { name: string };\r\n}\r\n\r\nexport class StudentModel {\r\n  private students: Student[] = [];\r\n\r\n  async fetchStudents(departmentId: number, semesterId: number): Promise<Student[]> {\r\n    // API call to fetch students\r\n    const response = await fetch(`/api/students?department=${departmentId}&semester=${semesterId}`);\r\n    this.students = await response.json();\r\n    return this.students;\r\n  }\r\n\r\n  getStudents(): Student[] {\r\n    return this.students;\r\n  }\r\n\r\n  getStudentById(id: string): Student | undefined {\r\n    return this.students.find(student => student.id === id);\r\n  }\r\n}\r\n"],"mappings":"AAUA,MAAO,MAAM,CAAAA,YAAa,CAAAC,YAAA,OAChBC,QAAQ,CAAc,EAAE,EAEhC,KAAM,CAAAC,aAAaA,CAACC,YAAoB,CAAEC,UAAkB,CAAsB,CAChF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,6BAAAC,MAAA,CAA6BJ,YAAY,eAAAI,MAAA,CAAaH,UAAU,CAAE,CAAC,CAC/F,IAAI,CAACH,QAAQ,CAAG,KAAM,CAAAI,QAAQ,CAACG,IAAI,CAAC,CAAC,CACrC,MAAO,KAAI,CAACP,QAAQ,CACtB,CAEAQ,WAAWA,CAAA,CAAc,CACvB,MAAO,KAAI,CAACR,QAAQ,CACtB,CAEAS,cAAcA,CAACC,EAAU,CAAuB,CAC9C,MAAO,KAAI,CAACV,QAAQ,CAACW,IAAI,CAACC,OAAO,EAAIA,OAAO,CAACF,EAAE,GAAKA,EAAE,CAAC,CACzD,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}