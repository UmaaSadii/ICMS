{"ast":null,"code":"import React from'react';import{Routes,Route,Navigate}from'react-router-dom';import AuthPage from'./pages/AuthPage';import ProtectedRoute from'./routes/ProtectedRoute';import{useAuth}from'./context/AuthContext';import AdminDashboard from'./pages/AdminDashboard';import StudentDashboard from'./pages/StudentDashboard';import StudentProfile from'./components/EnhancedStudentProfile';import TeacherDashboard from'./pages/TeacherDashboard';// Import TeacherDashboard\nimport ResultManagement from'./components/pages/ResultManagement';import ProfessionalResultManagement from'./components/pages/ResultManagement';// Use the full AdminDashboard component from pages/AdminDashboard.tsx\n// Use AdminDashboard as the default dashboard for now\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>/*#__PURE__*/_jsx(AdminDashboard,{});// Staff dashboard component\nconst StaffDashboard=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:\"Staff Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Staff dashboard content will be added here.\"})]});const AppRoutes=()=>{const{currentUser}=useAuth();// Determine redirect path based on user role\nconst getRedirectPath=()=>{if(!currentUser)return'/login';switch(currentUser.role){case'student':return'/student';case'staff':return'/staff';case'instructor':// Add instructor role\nreturn'/teacher';case'admin':case'principal':case'director':return'/admin';default:return'/dashboard';}};return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:currentUser?/*#__PURE__*/_jsx(Navigate,{to:getRedirectPath()}):/*#__PURE__*/_jsx(AuthPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:currentUser?/*#__PURE__*/_jsx(Navigate,{to:getRedirectPath()}):/*#__PURE__*/_jsx(AuthPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:currentUser?/*#__PURE__*/_jsx(Navigate,{to:getRedirectPath()}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{}),children:/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{allowedRoles:['student']}),children:[/*#__PURE__*/_jsx(Route,{path:\"/student\",element:/*#__PURE__*/_jsx(StudentDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/student-dashboard\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/student\"})})]}),/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{allowedRoles:['admin','student']}),children:/*#__PURE__*/_jsx(Route,{path:\"/student-profile/:id\",element:/*#__PURE__*/_jsx(StudentProfile,{})})}),/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{allowedRoles:['staff']}),children:[/*#__PURE__*/_jsx(Route,{path:\"/staff\",element:/*#__PURE__*/_jsx(StaffDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/staff-dashboard\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/staff\"})})]}),/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{allowedRoles:['instructor']}),children:/*#__PURE__*/_jsx(Route,{path:\"/teacher\",element:/*#__PURE__*/_jsx(TeacherDashboard,{})})}),/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{allowedRoles:['admin','principal','director']}),children:[/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(AdminDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin-dashboard\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/admin\"})})]}),/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(ProtectedRoute,{allowedRoles:['admin','principal','director']}),children:[/*#__PURE__*/_jsx(Route,{path:\"/result-management\",element:/*#__PURE__*/_jsx(ResultManagement,{})}),/*#__PURE__*/_jsx(Route,{path:\"/professional-result-management\",element:/*#__PURE__*/_jsx(ProfessionalResultManagement,{})})]}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:getRedirectPath()})})]});};export default AppRoutes;","map":{"version":3,"names":["React","Routes","Route","Navigate","AuthPage","ProtectedRoute","useAuth","AdminDashboard","StudentDashboard","StudentProfile","TeacherDashboard","ResultManagement","ProfessionalResultManagement","jsx","_jsx","jsxs","_jsxs","Dashboard","StaffDashboard","className","children","AppRoutes","currentUser","getRedirectPath","role","path","element","to","allowedRoles"],"sources":["C:/UMI/Frontend/src/routes.tsx"],"sourcesContent":["import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage';\nimport ProtectedRoute from './routes/ProtectedRoute';\nimport { useAuth } from './context/AuthContext';\nimport AdminDashboard from './pages/AdminDashboard';\n\nimport StudentDashboard from './pages/StudentDashboard';\nimport StudentProfile from './components/EnhancedStudentProfile';\nimport TeacherDashboard from './pages/TeacherDashboard'; // Import TeacherDashboard\n\nimport ResultManagement from './components/pages/ResultManagement';\nimport ProfessionalResultManagement from './components/pages/ResultManagement';\n\n// Use the full AdminDashboard component from pages/AdminDashboard.tsx\n\n// Use AdminDashboard as the default dashboard for now\nconst Dashboard = () => <AdminDashboard />;\n\n// Staff dashboard component\nconst StaffDashboard = () => <div className=\"p-8\"><h1 className=\"text-2xl font-bold\">Staff Dashboard</h1><p>Staff dashboard content will be added here.</p></div>;\n\nconst AppRoutes: React.FC = () => {\n  const { currentUser } = useAuth();\n\n  // Determine redirect path based on user role\n  const getRedirectPath = () => {\n    if (!currentUser) return '/login';\n\n    switch (currentUser.role) {\n      case 'student':\n        return '/student';\n      case 'staff':\n        return '/staff';\n      case 'instructor': // Add instructor role\n        return '/teacher';\n      case 'admin':\n      case 'principal':\n      case 'director':\n        return '/admin';\n      default:\n        return '/dashboard';\n    }\n  };\n\n  return (\n    <Routes>\n      {/* Public routes */}\n      <Route path=\"/login\" element={currentUser ? <Navigate to={getRedirectPath()} /> : <AuthPage />} />\n      <Route path=\"/register\" element={currentUser ? <Navigate to={getRedirectPath()} /> : <AuthPage />} />\n      \n      {/* Redirect root to login if not authenticated */}\n      <Route path=\"/\" element={currentUser ? <Navigate to={getRedirectPath()} /> : <Navigate to=\"/login\" />} />\n      \n      {/* Protected routes */}\n      <Route element={<ProtectedRoute />}>\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n      </Route>\n      \n      {/* Role-specific routes */}\n      <Route element={<ProtectedRoute allowedRoles={['student']} />}>\n        <Route path=\"/student\" element={<StudentDashboard />} />\n        <Route path=\"/student-dashboard\" element={<Navigate to=\"/student\" />} />\n      </Route>\n      \n      {/* Student Profile Route - accessible by multiple roles */}\n      <Route element={<ProtectedRoute allowedRoles={['admin', 'student']} />}>\n        <Route path=\"/student-profile/:id\" element={<StudentProfile />} />\n      </Route>\n      \n      <Route element={<ProtectedRoute allowedRoles={['staff']} />}>\n        <Route path=\"/staff\" element={<StaffDashboard />} />\n        <Route path=\"/staff-dashboard\" element={<Navigate to=\"/staff\" />} />\n      </Route>\n      \n      <Route element={<ProtectedRoute allowedRoles={['instructor']} />}>\n        <Route path=\"/teacher\" element={<TeacherDashboard />} />\n      </Route>\n      \n      <Route element={<ProtectedRoute allowedRoles={['admin', 'principal', 'director']} />}>\n        <Route path=\"/admin\" element={<AdminDashboard />} />\n        <Route path=\"/admin-dashboard\" element={<Navigate to=\"/admin\" />} />\n      </Route>\n\n      {/* Result Management Routes */}\n      <Route element={<ProtectedRoute allowedRoles={['admin', 'principal', 'director']} />}>\n        <Route path=\"/result-management\" element={<ResultManagement />} />\n        <Route path=\"/professional-result-management\" element={<ProfessionalResultManagement />} />\n      </Route>\n      \n      {/* Fallback route */}\n      <Route path=\"*\" element={<Navigate to={getRedirectPath()} />} />\n    </Routes>\n  );\n};\n\nexport default AppRoutes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}