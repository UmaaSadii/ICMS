{"ast":null,"code":"import { api } from './api';\nexport const academicsService = {\n  getDepartments: () => api.get('academics/departments/'),\n  getCourses: () => api.get('academics/courses/'),\n  getCoursesByDepartment: departmentId => api.get(`academics/departments/${departmentId}/courses/`),\n  getCoursesBySemester: semesterId => api.get(`academics/semesters/${semesterId}/courses/`),\n  // Attendance APIs\n  getStudentAttendance: studentId => api.get(`academics/students/${studentId}/attendance/`),\n  createStudentAttendance: (studentId, data) => api.post(`academics/students/${studentId}/attendance/`, data),\n  updateAttendance: (attendanceId, data) => api.put(`academics/attendance/${attendanceId}/`, data),\n  deleteAttendance: attendanceId => api.delete(`academics/attendance/${attendanceId}/`),\n  // Result APIs\n  getResultsByDepartmentCourse: (departmentId, courseId) => api.get(`academics/departments/${departmentId}/courses/${courseId}/results/professional/`),\n  getStudentResults: studentId => api.get(`academics/students/${studentId}/results/professional/`),\n  createStudentResult: (studentId, data) => api.post(`academics/students/${studentId}/results/professional/`, data),\n  updateResult: (resultId, data) => api.put(`academics/results/${resultId}/`, data),\n  deleteResult: resultId => api.delete(`academics/results/${resultId}/`),\n  // Fee APIs\n  getFees: filters => {\n    const params = new URLSearchParams();\n    if (filters !== null && filters !== void 0 && filters.department) params.append('department', filters.department.toString());\n    if (filters !== null && filters !== void 0 && filters.semester) params.append('semester', filters.semester.toString());\n    console.log('Fee API filters:', params.toString());\n    return api.get(`academics/fees/?${params.toString()}`);\n  },\n  getStudentFees: studentId => api.get(`academics/students/${studentId}/fees/`),\n  createStudentFee: (studentId, data) => api.post(`academics/students/${studentId}/fees/`, data),\n  updateFee: (feeId, data) => api.put(`academics/fees/${feeId}/`, data),\n  deleteFee: feeId => api.delete(`academics/fees/${feeId}/`),\n  // Student APIs\n  getStudents: filters => {\n    const params = new URLSearchParams();\n    if (filters !== null && filters !== void 0 && filters.department) params.append('department', filters.department.toString());\n    if (filters !== null && filters !== void 0 && filters.semester) params.append('semester', filters.semester.toString());\n    console.log('Student API filters:', params.toString());\n    return api.get(`students/?${params.toString()}`);\n  },\n  getStudent: studentId => api.get(`students/students/${studentId}/`),\n  // Semester APIs\n  getSemesters: () => api.get('academics/semesters/'),\n  getSemester: semesterId => api.get(`academics/semesters/${semesterId}/`),\n  getSemestersByDepartment: departmentId => api.get(`academics/departments/${departmentId}/semesters/`),\n  // Fee Structure APIs\n  getFeeStructures: () => api.get('academics/fee-structures/'),\n  createFeeStructure: data => api.post('academics/fee-structures/', data),\n  updateFeeStructure: (id, data) => api.put(`academics/fee-structures/${id}/`, data),\n  deleteFeeStructure: id => api.delete(`academics/fee-structures/${id}/`)\n\n  // Add other academic related API calls here\n};","map":{"version":3,"names":["api","academicsService","getDepartments","get","getCourses","getCoursesByDepartment","departmentId","getCoursesBySemester","semesterId","getStudentAttendance","studentId","createStudentAttendance","data","post","updateAttendance","attendanceId","put","deleteAttendance","delete","getResultsByDepartmentCourse","courseId","getStudentResults","createStudentResult","updateResult","resultId","deleteResult","getFees","filters","params","URLSearchParams","department","append","toString","semester","console","log","getStudentFees","createStudentFee","updateFee","feeId","deleteFee","getStudents","getStudent","getSemesters","getSemester","getSemestersByDepartment","getFeeStructures","createFeeStructure","updateFeeStructure","id","deleteFeeStructure"],"sources":["C:/UMI/Frontend/src/api/academicsService.ts"],"sourcesContent":["import { api } from './api';\r\n\r\nexport const academicsService = {\r\n  getDepartments: () => api.get('academics/departments/'),\r\n  getCourses: () => api.get('academics/courses/'),\r\n  getCoursesByDepartment: (departmentId: number) => api.get(`academics/departments/${departmentId}/courses/`),\r\n  getCoursesBySemester: (semesterId: number) => api.get(`academics/semesters/${semesterId}/courses/`),\r\n\r\n  // Attendance APIs\r\n  getStudentAttendance: (studentId: string) => api.get(`academics/students/${studentId}/attendance/`),\r\n  createStudentAttendance: (studentId: number, data: any) => api.post(`academics/students/${studentId}/attendance/`, data),\r\n  updateAttendance: (attendanceId: number, data: any) => api.put(`academics/attendance/${attendanceId}/`, data),\r\n  deleteAttendance: (attendanceId: number) => api.delete(`academics/attendance/${attendanceId}/`),\r\n\r\n  // Result APIs\r\n  getResultsByDepartmentCourse: (departmentId: number, courseId: number) => api.get(`academics/departments/${departmentId}/courses/${courseId}/results/professional/`),\r\n  getStudentResults: (studentId: string) => api.get(`academics/students/${studentId}/results/professional/`),\r\n  createStudentResult: (studentId: string, data: any) => api.post(`academics/students/${studentId}/results/professional/`, data),\r\n  updateResult: (resultId: number, data: any) => api.put(`academics/results/${resultId}/`, data),\r\n  deleteResult: (resultId: number) => api.delete(`academics/results/${resultId}/`),\r\n\r\n  // Fee APIs\r\n  getFees: (filters?: { department?: number; semester?: number }) => {\r\n    const params = new URLSearchParams();\r\n    if (filters?.department) params.append('department', filters.department.toString());\r\n    if (filters?.semester) params.append('semester', filters.semester.toString());\r\n    console.log('Fee API filters:', params.toString());\r\n    return api.get(`academics/fees/?${params.toString()}`);\r\n  },\r\n  getStudentFees: (studentId: number) => api.get(`academics/students/${studentId}/fees/`),\r\n  createStudentFee: (studentId: number, data: any) => api.post(`academics/students/${studentId}/fees/`, data),\r\n  updateFee: (feeId: number, data: any) => api.put(`academics/fees/${feeId}/`, data),\r\n  deleteFee: (feeId: number) => api.delete(`academics/fees/${feeId}/`),\r\n\r\n  // Student APIs\r\n  getStudents: (filters?: { department?: number; semester?: number }) => {\r\n    const params = new URLSearchParams();\r\n    if (filters?.department) params.append('department', filters.department.toString());\r\n    if (filters?.semester) params.append('semester', filters.semester.toString());\r\n    console.log('Student API filters:', params.toString());\r\n    return api.get(`students/?${params.toString()}`);\r\n  },\r\n  getStudent: (studentId: string) => api.get(`students/students/${studentId}/`),\r\n\r\n  // Semester APIs\r\n  getSemesters: () => api.get('academics/semesters/'),\r\n  getSemester: (semesterId: number) => api.get(`academics/semesters/${semesterId}/`),\r\n  getSemestersByDepartment: (departmentId: number) => api.get(`academics/departments/${departmentId}/semesters/`),\r\n\r\n  // Fee Structure APIs\r\n  getFeeStructures: () => api.get('academics/fee-structures/'),\r\n  createFeeStructure: (data: any) => api.post('academics/fee-structures/', data),\r\n  updateFeeStructure: (id: number, data: any) => api.put(`academics/fee-structures/${id}/`, data),\r\n  deleteFeeStructure: (id: number) => api.delete(`academics/fee-structures/${id}/`),\r\n\r\n  // Add other academic related API calls here\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAE3B,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,cAAc,EAAEA,CAAA,KAAMF,GAAG,CAACG,GAAG,CAAC,wBAAwB,CAAC;EACvDC,UAAU,EAAEA,CAAA,KAAMJ,GAAG,CAACG,GAAG,CAAC,oBAAoB,CAAC;EAC/CE,sBAAsB,EAAGC,YAAoB,IAAKN,GAAG,CAACG,GAAG,CAAC,yBAAyBG,YAAY,WAAW,CAAC;EAC3GC,oBAAoB,EAAGC,UAAkB,IAAKR,GAAG,CAACG,GAAG,CAAC,uBAAuBK,UAAU,WAAW,CAAC;EAEnG;EACAC,oBAAoB,EAAGC,SAAiB,IAAKV,GAAG,CAACG,GAAG,CAAC,sBAAsBO,SAAS,cAAc,CAAC;EACnGC,uBAAuB,EAAEA,CAACD,SAAiB,EAAEE,IAAS,KAAKZ,GAAG,CAACa,IAAI,CAAC,sBAAsBH,SAAS,cAAc,EAAEE,IAAI,CAAC;EACxHE,gBAAgB,EAAEA,CAACC,YAAoB,EAAEH,IAAS,KAAKZ,GAAG,CAACgB,GAAG,CAAC,wBAAwBD,YAAY,GAAG,EAAEH,IAAI,CAAC;EAC7GK,gBAAgB,EAAGF,YAAoB,IAAKf,GAAG,CAACkB,MAAM,CAAC,wBAAwBH,YAAY,GAAG,CAAC;EAE/F;EACAI,4BAA4B,EAAEA,CAACb,YAAoB,EAAEc,QAAgB,KAAKpB,GAAG,CAACG,GAAG,CAAC,yBAAyBG,YAAY,YAAYc,QAAQ,wBAAwB,CAAC;EACpKC,iBAAiB,EAAGX,SAAiB,IAAKV,GAAG,CAACG,GAAG,CAAC,sBAAsBO,SAAS,wBAAwB,CAAC;EAC1GY,mBAAmB,EAAEA,CAACZ,SAAiB,EAAEE,IAAS,KAAKZ,GAAG,CAACa,IAAI,CAAC,sBAAsBH,SAAS,wBAAwB,EAAEE,IAAI,CAAC;EAC9HW,YAAY,EAAEA,CAACC,QAAgB,EAAEZ,IAAS,KAAKZ,GAAG,CAACgB,GAAG,CAAC,qBAAqBQ,QAAQ,GAAG,EAAEZ,IAAI,CAAC;EAC9Fa,YAAY,EAAGD,QAAgB,IAAKxB,GAAG,CAACkB,MAAM,CAAC,qBAAqBM,QAAQ,GAAG,CAAC;EAEhF;EACAE,OAAO,EAAGC,OAAoD,IAAK;IACjE,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,UAAU,EAAEF,MAAM,CAACG,MAAM,CAAC,YAAY,EAAEJ,OAAO,CAACG,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;IACnF,IAAIL,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEM,QAAQ,EAAEL,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACM,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;IAC7EE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAC;IAClD,OAAOhC,GAAG,CAACG,GAAG,CAAC,mBAAmByB,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;EACxD,CAAC;EACDI,cAAc,EAAG1B,SAAiB,IAAKV,GAAG,CAACG,GAAG,CAAC,sBAAsBO,SAAS,QAAQ,CAAC;EACvF2B,gBAAgB,EAAEA,CAAC3B,SAAiB,EAAEE,IAAS,KAAKZ,GAAG,CAACa,IAAI,CAAC,sBAAsBH,SAAS,QAAQ,EAAEE,IAAI,CAAC;EAC3G0B,SAAS,EAAEA,CAACC,KAAa,EAAE3B,IAAS,KAAKZ,GAAG,CAACgB,GAAG,CAAC,kBAAkBuB,KAAK,GAAG,EAAE3B,IAAI,CAAC;EAClF4B,SAAS,EAAGD,KAAa,IAAKvC,GAAG,CAACkB,MAAM,CAAC,kBAAkBqB,KAAK,GAAG,CAAC;EAEpE;EACAE,WAAW,EAAGd,OAAoD,IAAK;IACrE,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,UAAU,EAAEF,MAAM,CAACG,MAAM,CAAC,YAAY,EAAEJ,OAAO,CAACG,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;IACnF,IAAIL,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEM,QAAQ,EAAEL,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACM,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;IAC7EE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEP,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAC;IACtD,OAAOhC,GAAG,CAACG,GAAG,CAAC,aAAayB,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;EAClD,CAAC;EACDU,UAAU,EAAGhC,SAAiB,IAAKV,GAAG,CAACG,GAAG,CAAC,qBAAqBO,SAAS,GAAG,CAAC;EAE7E;EACAiC,YAAY,EAAEA,CAAA,KAAM3C,GAAG,CAACG,GAAG,CAAC,sBAAsB,CAAC;EACnDyC,WAAW,EAAGpC,UAAkB,IAAKR,GAAG,CAACG,GAAG,CAAC,uBAAuBK,UAAU,GAAG,CAAC;EAClFqC,wBAAwB,EAAGvC,YAAoB,IAAKN,GAAG,CAACG,GAAG,CAAC,yBAAyBG,YAAY,aAAa,CAAC;EAE/G;EACAwC,gBAAgB,EAAEA,CAAA,KAAM9C,GAAG,CAACG,GAAG,CAAC,2BAA2B,CAAC;EAC5D4C,kBAAkB,EAAGnC,IAAS,IAAKZ,GAAG,CAACa,IAAI,CAAC,2BAA2B,EAAED,IAAI,CAAC;EAC9EoC,kBAAkB,EAAEA,CAACC,EAAU,EAAErC,IAAS,KAAKZ,GAAG,CAACgB,GAAG,CAAC,4BAA4BiC,EAAE,GAAG,EAAErC,IAAI,CAAC;EAC/FsC,kBAAkB,EAAGD,EAAU,IAAKjD,GAAG,CAACkB,MAAM,CAAC,4BAA4B+B,EAAE,GAAG;;EAEhF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}